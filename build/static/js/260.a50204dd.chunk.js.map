{"version":3,"file":"static/js/260.a50204dd.chunk.js","mappings":"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","sources":["_mock/blog.js","sections/blog/post-card.jsx","sections/blog/post-sort.jsx","sections/blog/post-search.jsx","sections/blog/view/blog-view.jsx","pages/blog.jsx","utils/format-number.js"],"sourcesContent":["import { faker } from '@faker-js/faker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst POST_TITLES = [\r\n  'Whiteboard Templates By Industry Leaders',\r\n  'Tesla Cybertruck-inspired camper trailer for Tesla fans who can’t just wait for the truck!',\r\n  'Designify Agency Landing Page Design',\r\n  '✨What is Done is Done ✨',\r\n  'Fresh Prince',\r\n  'Six Socks Studio',\r\n  'vincenzo de cotiis’ crossing over showcases a research on contamination',\r\n  'Simple, Great Looking Animations in Your Project | Video Tutorial',\r\n  '40 Free Serif Fonts for Digital Designers',\r\n  'Examining the Evolution of the Typical Web Design Client',\r\n  'Katie Griffin loves making that homey art',\r\n  'The American Dream retold through mid-century railroad graphics',\r\n  'Illustration System Design',\r\n  'CarZio-Delivery Driver App SignIn/SignUp',\r\n  'How to create a client-serverless Jamstack app using Netlify, Gatsby and Fauna',\r\n  'Tylko Organise effortlessly -3D & Motion Design',\r\n  'RAYO ?? A expanded visual arts festival identity',\r\n  'Anthony Burrill and Wired mag’s Andrew Diprose discuss how they made January’s Change Everything cover',\r\n  'Inside the Mind of Samuel Day',\r\n  'Portfolio Review: Is This Portfolio Too Creative?',\r\n  'Akkers van Margraten',\r\n  'Gradient Ticket icon',\r\n  'Here’s a Dyson motorcycle concept that doesn’t ‘suck’!',\r\n  'How to Animate a SVG with border-image',\r\n];\r\n\r\nexport const posts = [...Array(23)].map((_, index) => ({\r\n  id: faker.string.uuid(),\r\n  cover: `${process.env.PUBLIC_URL}/assets/images/covers/cover_${index + 1}.jpg`,\r\n  title: POST_TITLES[index + 1],\r\n  createdAt: faker.date.past(),\r\n  view: faker.number.int(99999),\r\n  comment: faker.number.int(99999),\r\n  share: faker.number.int(99999),\r\n  favorite: faker.number.int(99999),\r\n  author: {\r\n    name: faker.person.fullName(),\r\n    avatarUrl: `${process.env.PUBLIC_URL}/assets/images/avatars/avatar_${index + 1}.jpg`,\r\n  },\r\n}));\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { fDate } from '../../utils/format-time';\r\nimport { fShortenNumber } from '../../utils/format-number';\r\n\r\nimport Iconify from '../../components/iconify';\r\nimport SvgColor from '../../components/svg-color';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PostCard({ post, index }) {\r\n  const { cover, title, view, comment, share, author, createdAt } = post;\r\n\r\n  const latestPostLarge = index === 0;\r\n\r\n  const latestPost = index === 1 || index === 2;\r\n\r\n  const renderAvatar = (\r\n    <Avatar\r\n      alt={author.name}\r\n      src={author.avatarUrl}\r\n      sx={{\r\n        zIndex: 9,\r\n        width: 32,\r\n        height: 32,\r\n        position: 'absolute',\r\n        left: (theme) => theme.spacing(3),\r\n        bottom: (theme) => theme.spacing(-2),\r\n        ...((latestPostLarge || latestPost) && {\r\n          zIndex: 9,\r\n          top: 24,\r\n          left: 24,\r\n          width: 40,\r\n          height: 40,\r\n        }),\r\n      }}\r\n    />\r\n  );\r\n\r\n  const renderTitle = (\r\n    <Link\r\n      color=\"inherit\"\r\n      variant=\"subtitle2\"\r\n      underline=\"hover\"\r\n      sx={{\r\n        height: 44,\r\n        overflow: 'hidden',\r\n        WebkitLineClamp: 2,\r\n        display: '-webkit-box',\r\n        WebkitBoxOrient: 'vertical',\r\n        ...(latestPostLarge && { typography: 'h5', height: 60 }),\r\n        ...((latestPostLarge || latestPost) && {\r\n          color: 'common.white',\r\n        }),\r\n      }}\r\n    >\r\n      {title}\r\n    </Link>\r\n  );\r\n\r\n  const renderInfo = (\r\n    <Stack\r\n      direction=\"row\"\r\n      flexWrap=\"wrap\"\r\n      spacing={1.5}\r\n      justifyContent=\"flex-end\"\r\n      sx={{\r\n        mt: 3,\r\n        color: 'text.disabled',\r\n      }}\r\n    >\r\n      {[\r\n        { number: comment, icon: 'eva:message-circle-fill' },\r\n        { number: view, icon: 'eva:eye-fill' },\r\n        { number: share, icon: 'eva:share-fill' },\r\n      ].map((info, _index) => (\r\n        <Stack\r\n          key={_index}\r\n          direction=\"row\"\r\n          sx={{\r\n            ...((latestPostLarge || latestPost) && {\r\n              opacity: 0.48,\r\n              color: 'common.white',\r\n            }),\r\n          }}\r\n        >\r\n          <Iconify width={16} icon={info.icon} sx={{ mr: 0.5 }} />\r\n          <Typography variant=\"caption\">\r\n            {fShortenNumber(info.number)}\r\n          </Typography>\r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  const renderCover = (\r\n    <Box\r\n      component=\"img\"\r\n      alt={title}\r\n      src={cover}\r\n      sx={{\r\n        top: 0,\r\n        width: 1,\r\n        height: 1,\r\n        objectFit: 'cover',\r\n        position: 'absolute',\r\n      }}\r\n    />\r\n  );\r\n\r\n  const renderDate = (\r\n    <Typography\r\n      variant=\"caption\"\r\n      component=\"div\"\r\n      sx={{\r\n        mb: 2,\r\n        color: 'text.disabled',\r\n        ...((latestPostLarge || latestPost) && {\r\n          opacity: 0.48,\r\n          color: 'common.white',\r\n        }),\r\n      }}\r\n    >\r\n      {fDate(createdAt)}\r\n    </Typography>\r\n  );\r\n\r\n  const renderShape = (\r\n    <SvgColor\r\n      color=\"paper\"\r\n      src={`${process.env.PUBLIC_URL}/assets/icons/shape-avatar.svg`}\r\n      sx={{\r\n        width: 80,\r\n        height: 36,\r\n        zIndex: 9,\r\n        bottom: -15,\r\n        position: 'absolute',\r\n        color: 'background.paper',\r\n        ...((latestPostLarge || latestPost) && { display: 'none' }),\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Grid xs={12} sm={latestPostLarge ? 12 : 6} md={latestPostLarge ? 6 : 3}>\r\n      <Card>\r\n        <Box\r\n          sx={{\r\n            position: 'relative',\r\n            pt: 'calc(100% * 3 / 4)',\r\n            ...((latestPostLarge || latestPost) && {\r\n              pt: 'calc(100% * 4 / 3)',\r\n              '&:after': {\r\n                top: 0,\r\n                content: \"''\",\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\r\n              },\r\n            }),\r\n            ...(latestPostLarge && {\r\n              pt: {\r\n                xs: 'calc(100% * 4 / 3)',\r\n                sm: 'calc(100% * 3 / 4.66)',\r\n              },\r\n            }),\r\n          }}\r\n        >\r\n          {renderShape}\r\n\r\n          {renderAvatar}\r\n\r\n          {renderCover}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            p: (theme) => theme.spacing(4, 3, 3, 3),\r\n            ...((latestPostLarge || latestPost) && {\r\n              width: 1,\r\n              bottom: 0,\r\n              position: 'absolute',\r\n            }),\r\n          }}\r\n        >\r\n          {renderDate}\r\n\r\n          {renderTitle}\r\n\r\n          {renderInfo}\r\n        </Box>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nPostSort.propTypes = {\r\n  options: PropTypes.array,\r\n  onSort: PropTypes.func,\r\n};\r\n\r\nexport default function PostSort({ options, onSort }) {\r\n  return (\r\n    <TextField select size=\"small\" value=\"latest\" onChange={onSort}>\r\n      {options.map((option) => (\r\n        <MenuItem key={option.value} value={option.value}>\r\n          {option.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\r\n\r\nimport Iconify from '../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nPostSearch.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function PostSearch({ posts }) {\r\n  return (\r\n    <Autocomplete\r\n      sx={{ width: 280 }}\r\n      autoHighlight\r\n      popupIcon={null}\r\n      slotProps={{\r\n        paper: {\r\n          sx: {\r\n            width: 320,\r\n            [`& .${autocompleteClasses.option}`]: {\r\n              typography: 'body2',\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      options={posts}\r\n      getOptionLabel={(post) => post.title}\r\n      isOptionEqualToValue={(option, value) => option.id === value.id}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          placeholder=\"Search post...\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify\r\n                  icon=\"eva:search-fill\"\r\n                  sx={{ ml: 1, width: 20, height: 20, color: 'text.disabled' }}\r\n                />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { posts } from '../../..//_mock/blog';\r\n\r\nimport Iconify from '../../../components/iconify';\r\n\r\nimport PostCard from '../post-card';\r\nimport PostSort from '../post-sort';\r\nimport PostSearch from '../post-search';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogView() {\r\n  return (\r\n    <Container>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n        <Typography variant=\"h4\">Blog</Typography>\r\n\r\n        <Button variant=\"contained\" color=\"inherit\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n          New Post\r\n        </Button>\r\n      </Stack>\r\n\r\n      <Stack mb={5} direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <PostSearch posts={posts} />\r\n        <PostSort\r\n          options={[\r\n            { value: 'latest', label: 'Latest' },\r\n            { value: 'popular', label: 'Popular' },\r\n            { value: 'oldest', label: 'Oldest' },\r\n          ]}\r\n        />\r\n      </Stack>\r\n\r\n      <Grid container spacing={3}>\r\n        {posts.map((post, index) => (\r\n          <PostCard key={post.id} post={post} index={index} />\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { BlogView } from '../sections/blog/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Blog | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <BlogView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["POST_TITLES","posts","Array","map","_","index","id","faker","string","uuid","cover","concat","process","title","createdAt","date","past","view","number","int","comment","share","favorite","author","name","person","fullName","avatarUrl","PostCard","_ref","post","latestPostLarge","latestPost","renderAvatar","_jsx","Avatar","alt","src","sx","zIndex","width","height","position","left","theme","spacing","bottom","top","renderTitle","Link","color","variant","underline","overflow","WebkitLineClamp","display","WebkitBoxOrient","typography","children","renderInfo","Stack","direction","flexWrap","justifyContent","mt","icon","info","_index","_jsxs","opacity","Iconify","mr","Typography","fShortenNumber","renderCover","Box","component","objectFit","renderDate","mb","fDate","renderShape","SvgColor","Grid","xs","sm","md","Card","pt","content","bgcolor","alpha","palette","grey","p","PostSort","options","onSort","TextField","select","size","value","onChange","option","MenuItem","label","PostSearch","Autocomplete","autoHighlight","popupIcon","slotProps","paper","autocompleteClasses","getOptionLabel","isOptionEqualToValue","renderInput","params","placeholder","InputProps","startAdornment","InputAdornment","ml","BlogView","Container","alignItems","Button","startIcon","container","BlogPage","_Fragment","Helmet","fCurrency","result","numeral","format","key","arguments","length","undefined","includes","replace"],"sourceRoot":""}