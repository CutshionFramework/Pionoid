{"version":3,"file":"static/js/484.8a516ff7.chunk.js","mappings":"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","sources":["apis/axiosInstance.js","apis/apis.js","sections/overview/app-tasks.jsx","sections/overview/robot-operation-list.jsx","sections/overview/app-order-timeline.jsx","sections/overview/app-widget-summary.jsx","sections/overview/run-movement-form-dialog.jsx","sections/overview/modify-form-dialog.jsx","sections/overview/robot-movement-list.jsx","sections/overview/view/app-view.jsx","pages/app.jsx","utils/format-number.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass AxiosInstance {\r\n  constructor(baseUrl) {\r\n    this.baseUrl = baseUrl;\r\n    this.instance = axios.create({\r\n      baseURL: this.baseUrl,\r\n      headers: {\r\n        'Content-Type': 'text/plain',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  async request(endpoint, method, params = '', query = null, data = null) {\r\n    const apiUrl = params\r\n      ? `${endpoint}/${params}${query ? `?${query}` : ''}`\r\n      : endpoint;\r\n    const headers = { 'Content-Type': 'text/plain' };\r\n\r\n    try {\r\n      const response = await this.instance.request({\r\n        url: apiUrl,\r\n        method,\r\n        headers,\r\n        data,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(`HTTP error! status: ${error.response.status}`);\r\n        throw new Error(`HTTP error! status: ${error.response.status}`);\r\n      } else {\r\n        console.error('Network error');\r\n        throw new Error('Network error');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// BASE URL\r\nconst httpClient = new AxiosInstance(process.env.REACT_APP_API_URL);\r\n\r\nexport const robotAPI = {\r\n  get: (endpoint, params = '', query = null) =>\r\n    httpClient.request(endpoint, 'GET', params, query),\r\n\r\n  post: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'POST', params, null, data),\r\n\r\n  put: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PUT', params, null, data),\r\n\r\n  delete: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'DELETE', params, null, data),\r\n\r\n  patch: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PATCH', params, null, data),\r\n};\r\n","import { robotAPI } from './axiosInstance';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const saveIpAddress = async (ipAddress) => {\r\n  try {\r\n    // endpoint example : const endpoint = `${BASE_URL}/users`;\r\n    //                  : const endpoint = `${BASE_URL}/posts`;\r\n    const endpoint = `${BASE_URL}`; // can be omitted now that just using base url.\r\n\r\n    // params example : const params = `${userid}/profile`;\r\n    //                : const params = `${postid}/text`;\r\n    const params = `set_ip`;\r\n\r\n    // body(=Data you want to send) example : Function Parameter\r\n    const res = await robotAPI.post(endpoint, params, ipAddress);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving IP address:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const savePosition = async () => {\r\n  try {\r\n    const params = `/save_robot_status`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updatePosition = async (originalName, updatedItem) => {\r\n  try {\r\n    const params = `/update_robot_status/${encodeURIComponent(originalName)}`;\r\n    const res = await robotAPI.put(params, updatedItem);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error updating position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deletePosition = async (name) => {\r\n  try {\r\n    const params = `/delete_robot_status/${encodeURIComponent(name)}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error deleting position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotRunSaveMovements = async (times) => {\r\n  try {\r\n    const params = `/run_saved_movements/${times}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error running saved movements:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const shutDown = async () => {\r\n  try {\r\n    const params = `/shut_down`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error shutting down:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogin = async () => {\r\n  try {\r\n    const params = `/login_in`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging in:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogout = async () => {\r\n  try {\r\n    const params = `/login_out`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging out:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOn = async () => {\r\n  try {\r\n    const params = `/power_on`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering on:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOff = async () => {\r\n  try {\r\n    const params = `/power_off`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering off:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotEnable = async () => {\r\n  try {\r\n    const params = `/enable_robot`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error enabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotDisable = async () => {\r\n  try {\r\n    const params = `/disable_robot`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error disabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDigitalOutputStatus = async () => {\r\n  try {\r\n    const params = `/digital_output_status`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error getting digital output status:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const useDigitalOutput1 = async () => {\r\n  try {\r\n    const params = `/use_digital_output1`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error using digital output 1:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const useDigitalOutput2 = async () => {\r\n  try {\r\n    const params = `/use_digital_output2`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error using digital output 2:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Popover from '@mui/material/Popover';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport Iconify from '../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsTasks({ title, subheader, list, ...other }) {\r\n  const [selected, setSelected] = useState(['2']);\r\n\r\n  const handleClickComplete = (taskId) => {\r\n    const tasksCompleted = selected.includes(taskId)\r\n      ? selected.filter((value) => value !== taskId)\r\n      : [...selected, taskId];\r\n\r\n    setSelected(tasksCompleted);\r\n  };\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      {list.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          checked={selected.includes(task.id)}\r\n          onChange={() => handleClickComplete(task.id)}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsTasks.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction TaskItem({ task, checked, onChange }) {\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleMarkComplete = () => {\r\n    handleCloseMenu();\r\n    console.info('MARK COMPLETE', task.id);\r\n  };\r\n\r\n  const handleShare = () => {\r\n    handleCloseMenu();\r\n    console.info('SHARE', task.id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleCloseMenu();\r\n    console.info('EDIT', task.id);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleCloseMenu();\r\n    console.info('DELETE', task.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          pl: 2,\r\n          pr: 1,\r\n          py: 1,\r\n          '&:not(:last-of-type)': {\r\n            borderBottom: (theme) => `dashed 1px ${theme.palette.divider}`,\r\n          },\r\n          ...(checked && {\r\n            color: 'text.disabled',\r\n            textDecoration: 'line-through',\r\n          }),\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          control={<Checkbox checked={checked} onChange={onChange} />}\r\n          label={task.name}\r\n          sx={{ flexGrow: 1, m: 0 }}\r\n        />\r\n\r\n        <IconButton color={open ? 'inherit' : 'default'} onClick={handleOpenMenu}>\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem onClick={handleMarkComplete}>\r\n          <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ mr: 2 }} />\r\n          Mark Complete\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleEdit}>\r\n          <Iconify icon=\"solar:pen-bold\" sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleShare}>\r\n          <Iconify icon=\"solar:share-bold\" sx={{ mr: 2 }} />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  task: PropTypes.object,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"../../i18n.js\";\r\n\r\nimport {\r\n  Grow,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popper,\r\n  MenuItem,\r\n  MenuList,\r\n  ClickAwayListener,\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  robotLogin,\r\n  robotLogout,\r\n  robotEnable,\r\n  robotDisable,\r\n  robotPowerOn,\r\n  robotPowerOff,\r\n} from \"../../apis/apis\";\r\n\r\nconst buttonStyles = css`\r\n  font-size: 1.25rem;\r\n  padding: 12px;\r\n  color: rgba(131, 169, 190);\r\n  background-color: white;\r\n  box-shadow: 0 0 10px rgba(131, 169, 190, 0.6);\r\n`;\r\n\r\nconst menuListStyles = css`\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst menuItemStyles = css`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: rgb(135, 140, 146);\r\n`;\r\n\r\nexport default function RobotOperationList() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === \"Escape\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const robotLoginClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogin();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotLogoutClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogout();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOnClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOn();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOffClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOff();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotEnableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotEnable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotDisableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotDisable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <div>\r\n        <Button\r\n          css={buttonStyles}\r\n          ref={anchorRef}\r\n          id=\"composition-button\"\r\n          aria-controls={open ? \"composition-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          {t(\"operation menu\")}\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          disablePortal={false}\r\n          style={{\r\n            width: anchorRef.current\r\n              ? anchorRef.current.offsetWidth\r\n              : undefined,\r\n          }}\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    css={menuListStyles}\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem css={menuItemStyles} onClick={robotLoginClicked}>\r\n                      {t(\"login\")}\r\n                    </MenuItem>\r\n                    <MenuItem css={menuItemStyles} onClick={robotLogoutClicked}>\r\n                      {t(\"logout\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOnClicked}\r\n                    >\r\n                      {t(\"power on\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOffClicked}\r\n                    >\r\n                      {t(\"power off\")}\r\n                    </MenuItem>\r\n                    <MenuItem css={menuItemStyles} onClick={robotEnableClicked}>\r\n                      {t(\"enable\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotDisableClicked}\r\n                    >\r\n                      {t(\"disable\")}\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineItem, { timelineItemClasses } from '@mui/lab/TimelineItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsOrderTimeline({ title, subheader, list, ...other }) {\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      <Timeline\r\n        sx={{\r\n          m: 0,\r\n          p: 3,\r\n          [`& .${timelineItemClasses.root}:before`]: {\r\n            flex: 0,\r\n            padding: 0,\r\n          },\r\n        }}\r\n      >\r\n        {list.map((item, index) => (\r\n          <OrderItem key={item.id} item={item} lastTimeline={index === list.length - 1} />\r\n        ))}\r\n      </Timeline>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsOrderTimeline.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction OrderItem({ item, lastTimeline }) {\r\n  const { type, title, text } = item;\r\n\r\n  const timeText = text.join('-');\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot\r\n          color={\r\n            (type === 'order1' && 'primary') ||\r\n            (type === 'order2' && 'success') ||\r\n            (type === 'order3' && 'info') ||\r\n            (type === 'order4' && 'warning') ||\r\n            'error'\r\n          }\r\n        />\r\n        {lastTimeline ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n\r\n      <TimelineContent>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n\r\n        <Typography variant=\"caption\" sx={{ color: 'text.disabled' }}>\r\n          {timeText}\r\n        </Typography>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n}\r\n\r\nOrderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  lastTimeline: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { fShortenNumber } from '../../utils/format-number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidgetSummary({ title, total, icon, color = 'primary', sx, ...other }) {\r\n  return (\r\n    <Card\r\n      component={Stack}\r\n      spacing={3}\r\n      direction=\"row\"\r\n      sx={{\r\n        px: 1,\r\n        py: 3,\r\n        borderRadius: 2,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {icon && <Box sx={{ width: 64, height: 64 }}>{icon}</Box>}\r\n\r\n      <Stack spacing={0.5}>\r\n        <Typography variant=\"h4\">{fShortenNumber(total)}</Typography>\r\n\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n          {title}\r\n        </Typography>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppWidgetSummary.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport \"../../i18n.js\";\r\n\r\nimport {\r\n  Alert,\r\n  Stack,\r\n  Button,\r\n  Dialog,\r\n  Snackbar,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from \"@mui/material\";\r\n\r\nimport { robotRunSaveMovements } from \"../../apis/apis\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst divStyles = css`\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  background-color: white;\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: #919eab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport default function RunMovementFormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!inputValue || inputValue <= 0) {\r\n      setSnackbarMessage(\"Please enter a valid positive number.\");\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotRunSaveMovements(inputValue);\r\n      console.log(`${response}: ${inputValue} times move`);\r\n      setInputValue(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <Stack css={divStyles}>\r\n      <Button css={buttonStyles} variant=\"outlined\" onClick={handleClickOpen}>\r\n        {t(\"run movements\")}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} disableScrollLock={true}>\r\n        <DialogTitle>Enter How Many times</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter the number of times the robot should perform the\r\n            movement. This action will be repeated accordingly.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            label=\"Number of Repetitions\"\r\n            type=\"number\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleConfirm}>Start</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity=\"error\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n}\r\n","// FormDialog.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\n\r\nconst ModifyFormDialog = ({ open, onClose, onSave, item }) => {\r\n  const [formData, setFormData] = useState(item || {});\r\n\r\n  useEffect(() => {\r\n    setFormData(item || {});\r\n  }, [item]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const updatedItem = {\r\n      ...formData,\r\n      originalName: item.name, // 기존 이름을 원본 이름으로 저장\r\n    };\r\n    onSave(updatedItem); // 수정된 아이템을 부모 컴포넌트에 전달\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableScrollLock={true}>\r\n      <DialogTitle>Edit Item</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formData.name || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"x\"\r\n          label=\"X\"\r\n          value={formData.x || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"y\"\r\n          label=\"Y\"\r\n          value={formData.y || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"z\"\r\n          label=\"Z\"\r\n          value={formData.z || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rx\"\r\n          label=\"RX\"\r\n          value={formData.rx || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"ry\"\r\n          label=\"RY\"\r\n          value={formData.ry || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rz\"\r\n          label=\"RZ\"\r\n          value={formData.rz || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModifyFormDialog;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Box,\r\n  Menu,\r\n  MenuItem,\r\n} from '@mui/material';\r\n\r\nimport RunMovementFormDialog from './run-movement-form-dialog';\r\nimport ModifyFormDialog from './modify-form-dialog';\r\nimport { deletePosition, updatePosition } from '../../apis/apis';\r\n\r\nconst listContainerStyles = css`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  box-shadow: 2px 2px 10px 2px rgba(0, 0, 0, 0.04);\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  color: #919eab;\r\n  max-height: 50%;\r\n  overflow-y: auto;\r\n  transform: translateX(-50%);\r\n  transition:\r\n    transform 0.5s ease-in-out,\r\n    opacity 0.5s ease-in-out;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n\r\n  &.show {\r\n    transform: translateX(-50%) translateY(0%);\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 900px;\r\n    left: 57.5%;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 800px;\r\n    left: 51%;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 50%;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: #919eab;\r\n  background-color: white;\r\n  box-shadow: 2px 2px 10px 3px rgba(0, 0, 0, 0.03);\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst tableHeaderStyles = css`\r\n  background-color: #f0f0f0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst tableStyles = css`\r\n  min-width: 650px;\r\n`;\r\n\r\nconst hoveredStyle = css`\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst defaultStyle = css`\r\n  background-color: transparent;\r\n  cursor: grab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst RobotMovementList = ({ showList, toggleList, onItemClick }) => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [contextMenu, setContextMenu] = useState(null);\r\n\r\n  const [draggedOverIndex, setDraggedOverIndex] = useState(null); // 드래그 중인 요소가 현재 위치한 인덱스\r\n\r\n  const loadDataFromLocalStorage = () => {\r\n    const storedData = localStorage.getItem('positions');\r\n    if (storedData) {\r\n      setData(JSON.parse(storedData));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showList) {\r\n      loadDataFromLocalStorage();\r\n    }\r\n  }, [showList]);\r\n\r\n  useEffect(() => {\r\n    if (contextMenu) {\r\n      const scrollbarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = `${scrollbarWidth}px`;\r\n      document.querySelector('header').style.paddingRight =\r\n        `${scrollbarWidth}px`;\r\n    } else {\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = '';\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = '';\r\n    };\r\n  }, [contextMenu]);\r\n\r\n  const handleItemClick = (item) => {\r\n    onItemClick(item);\r\n  };\r\n\r\n  const handleRobotMovementListButtonClick = () => {\r\n    loadDataFromLocalStorage();\r\n    toggleList();\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      const copiedItem = { ...contextMenu.item };\r\n      copiedItem.name = `${copiedItem.name}_copy`;\r\n\r\n      const updatedData = [...data, copiedItem];\r\n      setData(updatedData);\r\n      localStorage.setItem('positions', JSON.stringify(updatedData));\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const handleModify = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      setSelectedItem(contextMenu.item);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const handleSave = async (modifiedItem) => {\r\n    const existingData = JSON.parse(localStorage.getItem('positions')) || [];\r\n\r\n    const updatedData = existingData.map((item) => {\r\n      if (item.name === modifiedItem.originalName) {\r\n        return { ...modifiedItem, originalName: undefined };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    localStorage.setItem('positions', JSON.stringify(updatedData));\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await updatePosition(modifiedItem.originalName, modifiedItem);\r\n      console.log('Position updated successfully');\r\n    } catch (error) {\r\n      console.error('Failed to update position:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      deleteFromLocalStorage(contextMenu.item.name);\r\n      deleteFromServer(contextMenu.item.name);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const deleteFromLocalStorage = (nameToDelete) => {\r\n    const existingData = JSON.parse(localStorage.getItem('positions')) || [];\r\n    const filteredData = existingData.filter(\r\n      (item) => item.name !== nameToDelete\r\n    );\r\n    localStorage.setItem('positions', JSON.stringify(filteredData));\r\n    setData(filteredData);\r\n  };\r\n\r\n  const deleteFromServer = async (nameToDelete) => {\r\n    try {\r\n      console.log(nameToDelete);\r\n      const response = await deletePosition(nameToDelete);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to delete session from server:', error);\r\n    }\r\n  };\r\n\r\n  const handleContextMenu = (event, item) => {\r\n    event.preventDefault();\r\n    setContextMenu(\r\n      contextMenu === null\r\n        ? {\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n            item: item,\r\n          }\r\n        : null\r\n    );\r\n  };\r\n\r\n  const handleCloseContextMenu = () => {\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const onDragStart = (e, index) => {\r\n    e.dataTransfer.setData('text/plain', index);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const onDragOver = (e, index) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n\r\n    setDraggedOverIndex(index);\r\n  };\r\n\r\n  const onDrop = (e, dropIndex) => {\r\n    e.preventDefault();\r\n    const dragIndex = e.dataTransfer.getData('text/plain');\r\n    if (dragIndex === undefined) return;\r\n\r\n    const reorderedData = Array.from(data);\r\n    const [movedItem] = reorderedData.splice(dragIndex, 1);\r\n    reorderedData.splice(dropIndex, 0, movedItem);\r\n\r\n    setData(reorderedData);\r\n    localStorage.setItem('positions', JSON.stringify(reorderedData));\r\n\r\n    setDraggedOverIndex(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`list-container ${showList ? 'show' : ''}`}\r\n        css={listContainerStyles}\r\n      >\r\n        <TableContainer component={Paper}>\r\n          <Table css={tableStyles} aria-label=\"robot movement table\">\r\n            <TableHead>\r\n              <TableRow css={tableHeaderStyles}>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>X</TableCell>\r\n                <TableCell>Y</TableCell>\r\n                <TableCell>Z</TableCell>\r\n                <TableCell>RX</TableCell>\r\n                <TableCell>RY</TableCell>\r\n                <TableCell>RZ</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((item, index) => (\r\n                <TableRow\r\n                  key={item.name}\r\n                  draggable\r\n                  onDragStart={(e) => onDragStart(e, index)}\r\n                  onDragOver={(e) => onDragOver(e, index)}\r\n                  onDrop={(e) => onDrop(e, index)}\r\n                  onClick={() => handleItemClick(item.name)}\r\n                  onContextMenu={(event) => handleContextMenu(event, item)}\r\n                  css={[\r\n                    defaultStyle,\r\n                    draggedOverIndex === index && hoveredStyle,\r\n                  ]}\r\n                >\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>{item.x}</TableCell>\r\n                  <TableCell>{item.y}</TableCell>\r\n                  <TableCell>{item.z}</TableCell>\r\n                  <TableCell>{item.rx}</TableCell>\r\n                  <TableCell>{item.ry}</TableCell>\r\n                  <TableCell>{item.rz}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box sx={{ mt: 2 }}>\r\n          <RunMovementFormDialog />\r\n        </Box>\r\n        <Box sx={{ mt: 2 }}>\r\n          <ModifyFormDialog\r\n            open={Boolean(selectedItem)}\r\n            item={selectedItem}\r\n            onClose={() => setSelectedItem(null)}\r\n            onSave={handleSave}\r\n          />\r\n        </Box>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        css={buttonStyles}\r\n        onClick={handleRobotMovementListButtonClick}\r\n      >\r\n        Robot Movement List\r\n      </Button>\r\n      <Menu\r\n        keepMounted\r\n        open={contextMenu !== null}\r\n        onClose={handleCloseContextMenu}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          contextMenu !== null\r\n            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={handleCopy}>Copy</MenuItem>\r\n        <MenuItem onClick={handleModify}>Modify</MenuItem>\r\n        <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RobotMovementList;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\n\r\nimport {\r\n  shutDown,\r\n  savePosition,\r\n  saveIpAddress,\r\n  useDigitalOutput1,\r\n  useDigitalOutput2,\r\n} from \"../../../apis/apis\";\r\n\r\nimport AppTasks from \"../app-tasks\";\r\nimport RobotOperationList from \"../robot-operation-list\";\r\nimport AppOrderTimeline from \"../app-order-timeline\";\r\nimport AppWidgetSummary from \"../app-widget-summary\";\r\n\r\nimport RobotMovementList from \"../robot-movement-list\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"../../../i18n.js\";\r\nimport { t } from \"i18next\";\r\n\r\n// ----------------------------------------------------------------------\r\nconst imgGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst menuListStyles = css`\r\n  position: absolute;\r\n  z-index: 10;\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 260px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    margin-top: 210px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst saveButtonStyles = css`\r\n  align-self: center;\r\n  height: 100%;\r\n  background-color: white;\r\n  color: #919eab;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst activeButtonStyles = (active) => css`\r\n  background-color: ${active ? \"lightblue\" : \"white\"};\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${active ? \"lightblue\" : \"#f0f0f0\"};\r\n  }\r\n`;\r\n\r\nconst inputGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst textFieldStyles = css`\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  padding: 24px;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  label {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst formDialogStyles = css`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 5%;\r\n  z-index: 1000;\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 0;\r\n    width: 100%;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport default function AppView() {\r\n  const [ipAddress, setIpAddress] = useState(\"\");\r\n  const [tool1Active, setTool1Active] = useState(false);\r\n  const [tool2Active, setTool2Active] = useState(false);\r\n\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    setIpAddress(event.target.value);\r\n  };\r\n\r\n  const handleSaveIpAddress = async () => {\r\n    try {\r\n      const response = await saveIpAddress(ipAddress);\r\n      console.log(`${response}: ${ipAddress}`);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const handleToolClick = (tool) => {\r\n    if (tool === \"tool1\") {\r\n      setTool1Active(!tool1Active);\r\n      Tool1Clicked();\r\n      console.log(tool1Active ? \"Tool 1 deactivated\" : \"Tool 1 activated\");\r\n    } else if (tool === \"tool2\") {\r\n      setTool2Active(!tool2Active);\r\n      Tool2Clicked();\r\n      console.log(tool2Active ? \"Tool 2 deactivated\" : \"Tool 2 activated\");\r\n    }\r\n  };\r\n\r\n  const savePositionClicked = async () => {\r\n    try {\r\n      const response = await savePosition();\r\n      saveToLocalStorage(\"positions\", response); // 'positions'는 로컬스토리지의 키\r\n      console.log(\"Data saved to localStorage:\", response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const shutDownClicked = async () => {\r\n    try {\r\n      const response = await shutDown();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const Tool1Clicked = async () => {\r\n    try {\r\n      const response = await useDigitalOutput1();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const Tool2Clicked = async () => {\r\n    try {\r\n      const response = await useDigitalOutput2();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    setShowList(!showList);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    console.log(`${item} clicked`);\r\n  };\r\n\r\n  // 변환할 데이터 포맷\r\n  const formatData = (data) => ({\r\n    name: data.name,\r\n    x: data.x,\r\n    y: data.y,\r\n    z: data.z,\r\n    rx: data.rx,\r\n    ry: data.ry,\r\n    rz: data.rz,\r\n  });\r\n\r\n  // 로컬스토리지에 저장할 함수\r\n  const saveToLocalStorage = (key, data) => {\r\n    const existingData = JSON.parse(localStorage.getItem(key)) || [];\r\n    const formattedData = formatData(data); // 변환 함수 호출\r\n    existingData.push(formattedData);\r\n    localStorage.setItem(key, JSON.stringify(existingData));\r\n  };\r\n\r\n  // 번역 함수\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n        {t(\"greeting\")}\r\n      </Typography>\r\n\r\n      <Grid xs={12} md={6} lg={8} css={imgGridStyles}>\r\n        <img src=\"/assets/images/jaka%20robot%20arm.png\" alt=\"JAKA robot arm\" />\r\n        <Grid xs={12} md={6} lg={8} css={menuListStyles}>\r\n          <RobotOperationList />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid css={inputGridStyles} xs={8} sm={9} md={8}>\r\n          <TextField\r\n            css={textFieldStyles}\r\n            label={t(\"ip address\")}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={ipAddress}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <img\r\n                  alt=\"icon\"\r\n                  src=\"/assets/icons/glass/ic_glass_users.png\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid css={inputGridStyles} xs={4} sm={3} md={4}>\r\n          <Button\r\n            css={saveButtonStyles}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSaveIpAddress}\r\n            fullWidth\r\n          >\r\n            {t(\"save ip\")}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase style={{ width: \"100%\" }} onClick={savePositionClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"save position\")}\r\n              total={2}\r\n              color=\"primary\"\r\n              icon={\r\n                <img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_buy.png\" />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase style={{ width: \"100%\" }}>\r\n            <AppWidgetSummary\r\n              onClick={() => handleToolClick(\"tool1\")}\r\n              css={activeButtonStyles(tool1Active)}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"do 1\")}\r\n              total={3}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src=\"/assets/icons/glass/ic_glass_message.png\"\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase style={{ width: \"100%\" }}>\r\n            <AppWidgetSummary\r\n              onClick={() => handleToolClick(\"tool2\")}\r\n              css={activeButtonStyles(tool2Active)}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"do 2\")}\r\n              total={4}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src=\"/assets/icons/glass/ic_glass_message.png\"\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase style={{ width: \"100%\" }} onClick={shutDownClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"shut down\")}\r\n              total={6}\r\n              color=\"primary\"\r\n              icon={\r\n                <img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={10} md={4} lg={6}>\r\n          <AppTasks\r\n            title={t(\"task\")}\r\n            list={[\r\n              { id: \"1\", name: t(\"listValue.name01\") },\r\n              { id: \"2\", name: t(\"listValue.name02\") },\r\n              { id: \"3\", name: t(\"listValue.name03\") },\r\n              { id: \"4\", name: t(\"listValue.name04\") },\r\n              { id: \"5\", name: t(\"listValue.name05\") },\r\n            ]}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={13} md={7} lg={6}>\r\n          <AppOrderTimeline\r\n            title=\"Process\"\r\n            list={[...Array(3)].map((_, index) => ({\r\n              id: faker.string.uuid(),\r\n              title: [\r\n                t(\"titleValue.01\"),\r\n                t(\"titleValue.02\"),\r\n                t(\"titleValue.03\"),\r\n              ][index],\r\n              type: `order${index + 1}`,\r\n              text: [\r\n                [t(\"requiredTime.01\")],\r\n                [t(\"requiredTime.02\")],\r\n                [t(\"requiredTime.03\")],\r\n              ][index],\r\n            }))}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid css={formDialogStyles} xs={14} sm={8} md={6}>\r\n          <RobotMovementList\r\n            showList={showList}\r\n            toggleList={toggleList}\r\n            onItemClick={handleItemClick}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { AppView } from '../sections/overview/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Pionoid | Web I/F </title>\r\n      </Helmet>\r\n\r\n      <AppView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["httpClient","constructor","baseUrl","this","instance","axios","create","baseURL","headers","withCredentials","request","endpoint","method","params","arguments","length","undefined","query","data","apiUrl","concat","url","error","response","console","status","Error","process","REACT_APP_API_URL","robotAPI","BASE_URL","saveIpAddress","async","ipAddress","savePosition","shutDown","robotLogin","robotLogout","robotPowerOn","robotPowerOff","robotEnable","robotDisable","useDigitalOutput1","useDigitalOutput2","AnalyticsTasks","_ref","title","subheader","list","other","selected","setSelected","useState","_jsxs","Card","children","_jsx","CardHeader","map","task","TaskItem","checked","includes","id","onChange","taskId","tasksCompleted","filter","value","handleClickComplete","_ref2","open","setOpen","handleCloseMenu","_Fragment","Stack","direction","alignItems","sx","pl","pr","py","borderBottom","theme","palette","divider","color","textDecoration","FormControlLabel","control","Checkbox","label","name","flexGrow","m","IconButton","onClick","event","currentTarget","Iconify","icon","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMarkComplete","info","mr","handleEdit","handleShare","handleDelete","buttonStyles","css","_templateObject","_taggedTemplateLiteral","menuListStyles","_templateObject2","menuItemStyles","_templateObject3","RobotOperationList","React","anchorRef","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","focus","robotLoginClicked","log","robotLogoutClicked","robotPowerOnClicked","robotPowerOffClicked","robotEnableClicked","robotDisableClicked","t","useTranslation","spacing","Button","ref","handleToggle","Popper","role","placement","transition","disablePortal","style","width","offsetWidth","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","AnalyticsOrderTimeline","Timeline","p","timelineItemClasses","root","flex","padding","item","index","OrderItem","lastTimeline","type","text","timeText","join","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Typography","variant","AppWidgetSummary","total","component","px","borderRadius","Box","height","fShortenNumber","divStyles","RunMovementFormDialog","inputValue","setInputValue","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","reason","i18n","handleClickOpen","Dialog","disableScrollLock","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","required","margin","fullWidth","DialogActions","times","robotRunSaveMovements","Snackbar","autoHideDuration","Alert","severity","onSave","formData","setFormData","useEffect","handleChange","e","x","y","z","rx","ry","rz","handleSave","updatedItem","originalName","listContainerStyles","tableHeaderStyles","tableStyles","_templateObject4","hoveredStyle","_templateObject5","defaultStyle","_templateObject6","showList","toggleList","onItemClick","setData","selectedItem","setSelectedItem","contextMenu","setContextMenu","draggedOverIndex","setDraggedOverIndex","loadDataFromLocalStorage","storedData","localStorage","getItem","JSON","parse","scrollbarWidth","window","innerWidth","document","documentElement","clientWidth","body","overflow","paddingRight","querySelector","deleteFromLocalStorage","nameToDelete","filteredData","setItem","stringify","deleteFromServer","encodeURIComponent","deletePosition","className","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","draggable","onDragStart","dataTransfer","effectAllowed","onDragOver","dropEffect","onDrop","dropIndex","dragIndex","getData","reorderedData","Array","from","movedItem","splice","handleItemClick","onContextMenu","handleContextMenu","mouseX","clientX","mouseY","clientY","mt","ModifyFormDialog","Boolean","updatedData","modifiedItem","updatePosition","handleRobotMovementListButtonClick","Menu","keepMounted","handleCloseContextMenu","anchorReference","anchorPosition","top","left","handleCopy","copiedItem","handleModify","imgGridStyles","saveButtonStyles","activeButtonStyles","active","inputGridStyles","textFieldStyles","_templateObject7","formDialogStyles","_templateObject8","AppView","setIpAddress","tool1Active","setTool1Active","tool2Active","setTool2Active","setShowList","handleToolClick","tool","Tool1Clicked","Tool2Clicked","saveToLocalStorage","existingData","formattedData","formatData","push","Container","maxWidth","mb","Grid","xs","md","lg","src","alt","container","sm","InputProps","startAdornment","marginRight","ButtonBase","AppTasks","AppOrderTimeline","_","faker","string","uuid","RobotMovementList","AppPage","Helmet","fCurrency","number","result","numeral","format","replace"],"sourceRoot":""}