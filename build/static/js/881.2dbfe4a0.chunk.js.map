{"version":3,"file":"static/js/881.2dbfe4a0.chunk.js","mappings":"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","sources":["apis/axiosInstance.js","apis/apis.js","sections/overview/app-tasks.jsx","sections/overview/robot-operation-list.jsx","sections/overview/app-order-timeline.jsx","sections/overview/app-widget-summary.jsx","sections/overview/run-movement-form-dialog.jsx","sections/overview/io_dialog.jsx","sections/overview/modify-form-dialog.jsx","sections/overview/robot-movement-list.jsx","sections/overview/view/app-view.jsx","pages/app.jsx","utils/format-number.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass AxiosInstance {\r\n  constructor(baseUrl) {\r\n    this.baseUrl = baseUrl;\r\n    this.instance = axios.create({\r\n      baseURL: this.baseUrl,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  async request(endpoint, method, params = '', query = null, data = null) {\r\n    const apiUrl = params\r\n      ? `${endpoint}/${params}${query ? `?${query}` : ''}`\r\n      : endpoint;\r\n\r\n    const headers = {\r\n      Authorization: `Bearer ${this.getToken()}`,\r\n    };\r\n\r\n    // Check if data is FormData\r\n    if (!(data instanceof FormData)) {\r\n      headers['Content-Type'] = 'application/json';\r\n    }\r\n\r\n    try {\r\n      const response = await this.instance.request({\r\n        url: apiUrl,\r\n        method,\r\n        headers,\r\n        data,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(`HTTP error! status: ${error.response.status}`);\r\n        throw new Error(`HTTP error! status: ${error.response.status}`);\r\n      } else {\r\n        console.error('Network error');\r\n        throw new Error('Network error');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// BASE URL\r\nconst httpClient = new AxiosInstance(process.env.REACT_APP_API_URL);\r\n\r\nexport const robotAPI = {\r\n  get: (endpoint, params = '', query = null) =>\r\n    httpClient.request(endpoint, 'GET', params, query),\r\n\r\n  post: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'POST', params, null, data),\r\n\r\n  put: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PUT', params, null, data),\r\n\r\n  delete: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'DELETE', params, null, data),\r\n\r\n  patch: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PATCH', params, null, data),\r\n};\r\n","import { robotAPI } from './axiosInstance';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getRobotMoves = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `get_moves`;\r\n    const res = await robotAPI.get(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveIpAddress = async (ipAddress, robotType) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `set_ip`;\r\n\r\n    // IP와 로봇 타입을 데이터로 전송\r\n    const data = {\r\n      ip: ipAddress,\r\n      robot_type: robotType,\r\n    };\r\n\r\n    const res = await robotAPI.post(endpoint, params, data);\r\n\r\n    // 서버로부터 받은 토큰을 로컬 스토리지에 저장\r\n    if (res.token) {\r\n      localStorage.setItem('token', res.token);\r\n    }\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Error saving IP address and robot type:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveMove = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `save_move`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateMove = async (originalName, updatedItem) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `update_move`;\r\n    const data = {\r\n      originalName: originalName,\r\n      updatedItem: updatedItem,\r\n    };\r\n    const res = await robotAPI.put(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error updating position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteMove = async (name) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `delete_move`;\r\n    const data = {\r\n      move_name: name,\r\n    };\r\n    const res = await robotAPI.delete(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error deleting position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const copyMove = async (originalName) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `copy_move`;\r\n    const data = {\r\n      originalName: originalName,\r\n    };\r\n    const res = await robotAPI.post(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const runAllMoves = async (times = 1) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `run_all_moves`;\r\n    const data = {\r\n      times: times,\r\n    };\r\n    const res = await robotAPI.post(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error running saved movements:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateMoveOrder = async (moveName, newIndex) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `reorder_moves`;\r\n    const data = {\r\n      move_name: moveName,\r\n      new_index: newIndex,\r\n    };\r\n    const res = await robotAPI.post(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error running saved movements:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const shutDown = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `shut_down`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error shutting down:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogin = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `login_in`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging in:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogout = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `login_out`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging out:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOn = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `power_on`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering on:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOff = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `power_off`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering off:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotEnable = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `enable_robot`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error enabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotDisable = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `disable_robot`;\r\n    const res = await robotAPI.post(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error disabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const voiceCommand = async (formData) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `voice_command`;\r\n    // 'Content-Type'은 axios가 자동으로 설정하므로, 따로 설정할 필요 없음\r\n    const res = await robotAPI.post(endpoint, params, formData);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ------------------------------------\r\n\r\nexport const getIOStatus = async () => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `get_io_status`;\r\n    const res = await robotAPI.get(endpoint, params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error getting digital output status:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const setIO = async (tabName, type, index, value) => {\r\n  try {\r\n    const endpoint = `${BASE_URL}`;\r\n    const params = `set_io_status`;\r\n    const data = {\r\n      io_type: tabName,\r\n      io_signal_type: type,\r\n      index: index,\r\n      value: value,\r\n    };\r\n    const res = await robotAPI.post(endpoint, params, data);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error using digital output:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Popover from '@mui/material/Popover';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport Iconify from '../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsTasks({ title, subheader, list, ...other }) {\r\n  const [selected, setSelected] = useState(['2']);\r\n\r\n  const handleClickComplete = (taskId) => {\r\n    const tasksCompleted = selected.includes(taskId)\r\n      ? selected.filter((value) => value !== taskId)\r\n      : [...selected, taskId];\r\n\r\n    setSelected(tasksCompleted);\r\n  };\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      {list.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          checked={selected.includes(task.id)}\r\n          onChange={() => handleClickComplete(task.id)}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsTasks.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction TaskItem({ task, checked, onChange }) {\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleMarkComplete = () => {\r\n    handleCloseMenu();\r\n    console.info('MARK COMPLETE', task.id);\r\n  };\r\n\r\n  const handleShare = () => {\r\n    handleCloseMenu();\r\n    console.info('SHARE', task.id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleCloseMenu();\r\n    console.info('EDIT', task.id);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleCloseMenu();\r\n    console.info('DELETE', task.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          pl: 2,\r\n          pr: 1,\r\n          py: 1,\r\n          '&:not(:last-of-type)': {\r\n            borderBottom: (theme) => `dashed 1px ${theme.palette.divider}`,\r\n          },\r\n          ...(checked && {\r\n            color: 'text.disabled',\r\n            textDecoration: 'line-through',\r\n          }),\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          control={<Checkbox checked={checked} onChange={onChange} />}\r\n          label={task.name}\r\n          sx={{ flexGrow: 1, m: 0 }}\r\n        />\r\n\r\n        <IconButton color={open ? 'inherit' : 'default'} onClick={handleOpenMenu}>\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem onClick={handleMarkComplete}>\r\n          <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ mr: 2 }} />\r\n          Mark Complete\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleEdit}>\r\n          <Iconify icon=\"solar:pen-bold\" sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleShare}>\r\n          <Iconify icon=\"solar:share-bold\" sx={{ mr: 2 }} />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  task: PropTypes.object,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport '../../i18n.js';\r\nimport MicNoneOutlinedIcon from '@mui/icons-material/MicNoneOutlined';\r\n\r\nimport {\r\n  Grow,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popper,\r\n  MenuItem,\r\n  MenuList,\r\n  ClickAwayListener,\r\n} from '@mui/material';\r\n\r\nimport {\r\n  robotLogin,\r\n  robotLogout,\r\n  robotEnable,\r\n  robotDisable,\r\n  robotPowerOn,\r\n  robotPowerOff,\r\n  voiceCommand,\r\n} from '../../apis/apis';\r\n\r\nconst menuListStyles = css`\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst menuItemStyles = css`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: rgb(135, 140, 146);\r\n`;\r\n\r\nexport default function RobotOperationList() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === 'Escape') {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const robotLoginClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogin();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const robotLogoutClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogout();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOnClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOn();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOffClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOff();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const robotEnableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotEnable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const robotDisableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotDisable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const handleVoiceCommand = async () => {\r\n    try {\r\n      // MediaRecorder를 사용하여 음성 녹음\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      const audioChunks = [];\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.push(event.data);\r\n      };\r\n\r\n      // 녹음 시작\r\n      mediaRecorder.start();\r\n      console.log('녹음 중...');\r\n\r\n      // 일정 시간 후 녹음 중지 (여기서는 4초)\r\n      setTimeout(() => {\r\n        mediaRecorder.stop();\r\n        console.log('녹음 종료');\r\n      }, 4000);\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        const formData = new FormData();\r\n        formData.append('file', audioBlob, 'audio.wav');\r\n\r\n        // 서버에 오디오 파일 전송\r\n        const res = await voiceCommand(formData); // voiceCommand 함수 사용\r\n        console.log(res);\r\n      };\r\n    } catch (error) {\r\n      console.error('음성 녹음 오류:', error);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button\r\n            style={{\r\n              color: 'white',\r\n              backgroundColor: 'rgb(178,204,255)',\r\n              width: '200px',\r\n              height: '57px',\r\n              fontSize: '20px',\r\n              boxShadow: '0 0 10px rgba(131, 169, 190, 0.6)',\r\n              borderRadius: '20px',\r\n              marginTop: '5px',\r\n            }}\r\n            ref={anchorRef}\r\n            id=\"composition-button\"\r\n            aria-controls={open ? 'composition-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n          >\r\n            {t('operation menu')}\r\n          </Button>\r\n          <Button>\r\n            <MicNoneOutlinedIcon\r\n              onClick={handleVoiceCommand}\r\n              style={{\r\n                height: '57px',\r\n                width: '57px',\r\n                padding: '0 15 0 15',\r\n                color: 'gray',\r\n                backgroundColor: 'white',\r\n                boxShadow: '0 0 10px rgba(131, 169, 190, 0.6)',\r\n                borderRadius: '20px',\r\n              }}\r\n            />\r\n          </Button>\r\n        </div>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          disablePortal={false}\r\n          style={{\r\n            width: anchorRef.current\r\n              ? anchorRef.current.offsetWidth\r\n              : undefined,\r\n          }}\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === 'bottom-start' ? 'left top' : 'left bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    css={menuListStyles}\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem css={menuItemStyles} onClick={robotLoginClicked}>\r\n                      {t('login')}\r\n                    </MenuItem>\r\n                    <MenuItem css={menuItemStyles} onClick={robotLogoutClicked}>\r\n                      {t('logout')}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOnClicked}\r\n                    >\r\n                      {t('power on')}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOffClicked}\r\n                    >\r\n                      {t('power off')}\r\n                    </MenuItem>\r\n                    <MenuItem css={menuItemStyles} onClick={robotEnableClicked}>\r\n                      {t('enable')}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotDisableClicked}\r\n                    >\r\n                      {t('disable')}\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineItem, { timelineItemClasses } from '@mui/lab/TimelineItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsOrderTimeline({ title, subheader, list, ...other }) {\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      <Timeline\r\n        sx={{\r\n          m: 0,\r\n          p: 3,\r\n          [`& .${timelineItemClasses.root}:before`]: {\r\n            flex: 0,\r\n            padding: 0,\r\n          },\r\n        }}\r\n      >\r\n        {list.map((item, index) => (\r\n          <OrderItem key={item.id} item={item} lastTimeline={index === list.length - 1} />\r\n        ))}\r\n      </Timeline>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsOrderTimeline.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction OrderItem({ item, lastTimeline }) {\r\n  const { type, title, text } = item;\r\n\r\n  const timeText = text.join('-');\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot\r\n          color={\r\n            (type === 'order1' && 'primary') ||\r\n            (type === 'order2' && 'success') ||\r\n            (type === 'order3' && 'info') ||\r\n            (type === 'order4' && 'warning') ||\r\n            'error'\r\n          }\r\n        />\r\n        {lastTimeline ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n\r\n      <TimelineContent>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n\r\n        <Typography variant=\"caption\" sx={{ color: 'text.disabled' }}>\r\n          {timeText}\r\n        </Typography>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n}\r\n\r\nOrderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  lastTimeline: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { fShortenNumber } from '../../utils/format-number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidgetSummary({ title, total, icon, color = 'primary', sx, ...other }) {\r\n  return (\r\n    <Card\r\n      component={Stack}\r\n      spacing={3}\r\n      direction=\"row\"\r\n      sx={{\r\n        px: 1,\r\n        py: 3,\r\n        borderRadius: 2,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {icon && <Box sx={{ width: 64, height: 64 }}>{icon}</Box>}\r\n\r\n      <Stack spacing={0.5}>\r\n        <Typography variant=\"h4\">{fShortenNumber(total)}</Typography>\r\n\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n          {title}\r\n        </Typography>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppWidgetSummary.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from 'react';\r\nimport { css } from '@emotion/react';\r\nimport '../../i18n.js';\r\n\r\nimport {\r\n  Alert,\r\n  Stack,\r\n  Button,\r\n  Dialog,\r\n  Snackbar,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\nimport { runAllMoves } from '../../apis/apis';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst divStyles = css`\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  background-color: white;\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: #919eab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport default function RunMovementFormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!inputValue || inputValue <= 0) {\r\n      setSnackbarMessage('Please enter a valid positive number.');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    try {\r\n      const response = await runAllMoves(inputValue);\r\n      console.log(`${response}: ${inputValue} times move`);\r\n      setInputValue('');\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Stack css={divStyles}>\r\n      <Button css={buttonStyles} variant=\"outlined\" onClick={handleClickOpen}>\r\n        {t('run movements')}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} disableScrollLock={true}>\r\n        <DialogTitle>Enter How Many times</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {t('description about repetitions')}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            label={t('number of repetitions')}\r\n            type=\"number\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{t('cancel')}</Button>\r\n          <Button onClick={handleConfirm}>{t('start')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity=\"error\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Collapse,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { getIOStatus, setIO } from '../../apis/apis';\r\n\r\nconst statusStyle = (isActive) => css`\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: ${isActive ? '#92bea9' : '#efedec'};\r\n  color: ${isActive ? '#f7edda' : 'black'};\r\n  text-align: center;\r\n`;\r\n\r\nconst buttonContainerStyle = css`\r\n  display: inline-block;\r\n  margin: 4px;\r\n`;\r\n\r\nconst buttonStyle = (isActive) => css`\r\n  border-color: ${isActive ? '#4F7670' : '#c5deda'};\r\n  background-color: ${isActive ? '#4F7670' : '#c5deda'};\r\n  color: ${isActive ? '#f7edda' : '#333333'};\r\n  &:hover {\r\n    border-color: ${isActive ? '#c5deda' : '#92bea9'};\r\n    background-color: ${isActive ? '#5a8c6f' : '#92bea9'};\r\n  }\r\n`;\r\n\r\nconst dialogContentStyle = css`\r\n  min-height: 400px;\r\n`;\r\n\r\nconst tabContainerContainerStyle = css`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst tabContainerStyle = css`\r\n  width: 271px;\r\n  border-radius: 23px;\r\n  overflow: hidden;\r\n  background-color: #92bea9;\r\n  margin: 10px;\r\n`;\r\n\r\nconst tabStyle = css`\r\n  .MuiTab-root {\r\n    color: #f7edda;\r\n    background-color: #92bea9;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .MuiTabs-indicator {\r\n    display: none;\r\n  }\r\n\r\n  .MuiTab-root.Mui-selected {\r\n    background-color: #4f7670;\r\n    color: #f7edda;\r\n  }\r\n`;\r\n\r\nfunction convertStringToObject(inputString) {\r\n  // 문자열에서 튜플 형식의 괄호를 대괄호로 변경\r\n  let formattedString = inputString\r\n    .replace(/\\(/g, '[') // '('를 '['로 변경\r\n    .replace(/\\)/g, ']') // ')'를 ']'로 변경\r\n    .replace(/'/g, '\"') // 작은따옴표를 큰따옴표로 변경\r\n    .replace(/,\\s*([\\]}])/g, '$1') // 배열이나 객체의 끝에서 쉼표 제거\r\n    .replace(/(\\d+(\\.\\d+)?)/g, '$1') // 숫자 형식을 유지\r\n    .replace(/(\\w+):/g, '\"$1\":'); // 키를 큰따옴표로 감싸기\r\n\r\n  // JSON 형태로 변환\r\n  try {\r\n    const resultObject = JSON.parse(formattedString);\r\n    return resultObject;\r\n  } catch (error) {\r\n    console.error('Parsing error:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction IODialog({ open, onClose, ioData }) {\r\n  const [activeButtons, setActiveButtons] = useState({\r\n    Cabinet: { DO: [], DI: [], AO: [], AI: [] },\r\n    Tool: { DO: [], DI: [], AI: [] },\r\n    Extend: { extio: [], out: [], in: [] },\r\n  });\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n  const [openSections, setOpenSections] = useState({\r\n    Cabinet: { DO: false, DI: false, AO: false, AI: false },\r\n    Tool: { DO: false, DI: false, AI: false },\r\n    Extend: { extio: false, out: false, in: false },\r\n  });\r\n\r\n  const buttons = Array.from({ length: 16 }, (_, i) => i + 1); // 고정된 버튼 배열\r\n  const tabNames = ['Cabinet', 'Tool', 'Extend'];\r\n  const title = tabNames[currentTab];\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (ioData) {\r\n        const convertIoData = convertStringToObject(ioData);\r\n        updateButtonStates(convertIoData);\r\n      } else {\r\n        fetchIOStatus();\r\n      }\r\n    }\r\n  }, [open, currentTab, ioData]);\r\n\r\n  const fetchIOStatus = async () => {\r\n    try {\r\n      const response = await getIOStatus();\r\n      console.log(response);\r\n      updateButtonStates(response);\r\n    } catch (error) {\r\n      console.error('Failed to fetch IO status:', error);\r\n    }\r\n  };\r\n\r\n  const updateButtonStates = (data) => {\r\n    const updatedButtons = { ...activeButtons };\r\n    updatedButtons.Cabinet = {\r\n      DO: data.CABINET.dout[0].slice(0, 16).map((val) => val === 1),\r\n      DI: data.CABINET.din[0].slice(0, 16).map((val) => val === 1),\r\n      AO: data.CABINET.aout[0].slice(0, 16).map((val) => val === 1),\r\n      AI: data.CABINET.ain[0].slice(0, 16).map((val) => val === 1),\r\n    };\r\n    updatedButtons.Tool = {\r\n      DO: data.TOOL.tio_dout[0].slice(0, 2).map((val) => val === 1),\r\n      DI: data.TOOL.tio_din[0].slice(0, 2).map((val) => val === 1),\r\n      AI: data.TOOL.tio_ain[0].slice(0, 2).map((val) => val === 1),\r\n    };\r\n    updatedButtons.Extend = {\r\n      extio: data.EXTEND.extio.length ? [data.EXTEND.extio[0] === 'extio'] : [],\r\n      out: data.EXTEND.out.slice(0, 16).map((val) => val === 1),\r\n      in: data.EXTEND.in.slice(0, 16).map((val) => val === 1),\r\n    };\r\n    setActiveButtons(updatedButtons);\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  const handleButtonClick = async (button, type) => {\r\n    const tabName = tabNames[currentTab];\r\n    const buttonIndex = button - 1;\r\n    const updatedButtons = { ...activeButtons };\r\n\r\n    const isActive = updatedButtons[tabName][type][buttonIndex];\r\n\r\n    updatedButtons[tabName][type][buttonIndex] = !isActive;\r\n\r\n    setActiveButtons(updatedButtons);\r\n\r\n    const value = isActive ? 0 : 1;\r\n\r\n    try {\r\n      await setIO(tabName, type, buttonIndex, value);\r\n    } catch (error) {\r\n      console.error('Failed to update IO status:', error);\r\n    }\r\n  };\r\n\r\n  const toggleSection = (type) => {\r\n    const tabName = tabNames[currentTab];\r\n    setOpenSections((prev) => ({\r\n      ...prev,\r\n      [tabName]: { ...prev[tabName], [type]: !prev[tabName][type] },\r\n    }));\r\n  };\r\n\r\n  const renderButtons = (types) => {\r\n    return types.map((type) => (\r\n      <React.Fragment key={type}>\r\n        <Grid item xs={12}>\r\n          <h3>\r\n            {type}\r\n            <IconButton onClick={() => toggleSection(type)}>\r\n              <ExpandMoreIcon\r\n                style={{\r\n                  transform: openSections[tabNames[currentTab]][type]\r\n                    ? 'rotate(0deg)'\r\n                    : 'rotate(180deg)',\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </h3>\r\n        </Grid>\r\n        <Collapse\r\n          in={openSections[tabNames[currentTab]][type]}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n        >\r\n          <Grid container spacing={1}>\r\n            {buttons.map((button, index) => {\r\n              const isActive = activeButtons[tabNames[currentTab]][type][index]; // Index 사용\r\n              return (\r\n                <Grid item key={button} css={buttonContainerStyle}>\r\n                  <Button\r\n                    css={buttonStyle(isActive)}\r\n                    variant={isActive ? 'contained' : 'outlined'}\r\n                    color=\"primary\"\r\n                    onClick={() => handleButtonClick(button, type)}\r\n                  >\r\n                    {`${type} ${button}`}\r\n                  </Button>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  const renderStatus = (types) => {\r\n    return types.map((type) => (\r\n      <React.Fragment key={type}>\r\n        <Grid item xs={12}>\r\n          <h3>\r\n            {type}\r\n            <IconButton onClick={() => toggleSection(type)}>\r\n              <ExpandMoreIcon\r\n                style={{\r\n                  transform: openSections[tabNames[currentTab]][type]\r\n                    ? 'rotate(0deg)'\r\n                    : 'rotate(180deg)',\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </h3>\r\n        </Grid>\r\n        <Collapse\r\n          in={openSections[tabNames[currentTab]][type]}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n        >\r\n          <Grid container spacing={1}>\r\n            {activeButtons[tabNames[currentTab]][type].map(\r\n              (isActive, index) => (\r\n                <Grid item key={index} css={buttonContainerStyle}>\r\n                  <div css={statusStyle(isActive)}>\r\n                    {`${type} ${index + 1} : `}{' '}\r\n                    {isActive ? 'Active' : 'Inactive'}\r\n                  </div>\r\n                </Grid>\r\n              )\r\n            )}\r\n          </Grid>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      disableScrollLock={true}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <div css={tabContainerContainerStyle}>\r\n        <div css={tabContainerStyle}>\r\n          <div css={tabStyle}>\r\n            <Tabs value={currentTab} onChange={handleTabChange} centered>\r\n              <Tab label=\"Cabinet\" />\r\n              <Tab label=\"Tool\" />\r\n              <Tab label=\"Extend\" />\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DialogContent css={dialogContentStyle}>\r\n        <Grid container spacing={2}>\r\n          {currentTab === 0 && (\r\n            <>\r\n              {renderButtons(['DO', 'AO'])}\r\n              {renderStatus(['DI', 'AI'])}\r\n            </>\r\n          )}\r\n          {currentTab === 1 && (\r\n            <>\r\n              {renderButtons(['DO'])}\r\n              {renderStatus(['DI', 'AI'])}\r\n            </>\r\n          )}\r\n          {currentTab === 2 && (\r\n            <>\r\n              {renderButtons(['extio', 'out'])}\r\n              {renderStatus(['in'])}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default IODialog;\r\n","// FormDialog.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\n\r\nconst ModifyFormDialog = ({ open, onClose, onSave, item }) => {\r\n  const [formData, setFormData] = useState(item || {});\r\n\r\n  useEffect(() => {\r\n    setFormData(item || {});\r\n  }, [item]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const updatedItem = {\r\n      ...formData,\r\n      originalName: item.move_name, // 기존 이름을 원본 이름으로 저장\r\n    };\r\n    onSave(updatedItem); // 수정된 아이템을 부모 컴포넌트에 전달\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableScrollLock={true}>\r\n      <DialogTitle>Edit Item</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          name=\"move_name\"\r\n          label=\"Name\"\r\n          value={formData.move_name || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"x\"\r\n          label=\"X\"\r\n          value={formData.x || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"y\"\r\n          label=\"Y\"\r\n          value={formData.y || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"z\"\r\n          label=\"Z\"\r\n          value={formData.z || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rx\"\r\n          label=\"RX\"\r\n          value={formData.rx || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"ry\"\r\n          label=\"RY\"\r\n          value={formData.ry || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rz\"\r\n          label=\"RZ\"\r\n          value={formData.rz || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModifyFormDialog;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Box,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@mui/material';\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nimport RunMovementFormDialog from './run-movement-form-dialog';\r\nimport IODialog from './io_dialog';\r\nimport ModifyFormDialog from './modify-form-dialog';\r\nimport {\r\n  deleteMove,\r\n  updateMove,\r\n  copyMove,\r\n  getRobotMoves,\r\n  updateMoveOrder,\r\n} from '../../apis/apis';\r\n\r\nconst listContainerStyles = css`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  box-shadow: 2px 2px 10px 2px rgba(0, 0, 0, 0.04);\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  color: #919eab;\r\n  max-height: 50%;\r\n  overflow-y: auto;\r\n  transform: translateX(-50%);\r\n  transition:\r\n    transform 0.5s ease-in-out,\r\n    opacity 0.5s ease-in-out;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n\r\n  &.show {\r\n    transform: translateX(-50%) translateY(0%);\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 900px;\r\n    left: 57.5%;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 800px;\r\n    left: 51%;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 50%;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 200px;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: white;\r\n  background-color: rgb(160, 186, 237);\r\n  box-shadow: 2px 2px 10px 3px rgba(0, 0, 0, 0.03);\r\n  transition: background-color 0.3s ease;\r\n  animation: bounce 2s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    color: black;\r\n    border: none;\r\n  }\r\n\r\n  @keyframes bounce {\r\n    0%,\r\n    20%,\r\n    50%,\r\n    80%,\r\n    100% {\r\n      transform: translateY(0);\r\n    }\r\n    40% {\r\n      transform: translateY(-40px);\r\n    }\r\n    60% {\r\n      transform: translateY(-15px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst tableHeaderStyles = css`\r\n  background-color: #f0f0f0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst tableStyles = css`\r\n  min-width: 650px;\r\n`;\r\n\r\nconst hoveredStyle = css`\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst defaultStyle = css`\r\n  background-color: transparent;\r\n  cursor: grab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst RobotMovementList = ({ showList, toggleList }) => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [contextMenu, setContextMenu] = useState(null);\r\n\r\n  const [draggedOverIndex, setDraggedOverIndex] = useState(null);\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const [selectedIOData, setSelectedIOData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (showList) {\r\n      loadDataFromServer();\r\n    }\r\n  }, [showList]);\r\n\r\n  useEffect(() => {\r\n    if (contextMenu) {\r\n      const scrollbarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = `${scrollbarWidth}px`;\r\n      document.querySelector('header').style.paddingRight =\r\n        `${scrollbarWidth}px`;\r\n    } else {\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = '';\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n      document.body.style.paddingRight = '';\r\n    };\r\n  }, [contextMenu]);\r\n\r\n  const loadDataFromServer = async () => {\r\n    try {\r\n      const response = await getRobotMoves();\r\n      console.log(response);\r\n\r\n      const formattedData = Object.keys(response).map((key) => {\r\n        const item = response[key];\r\n\r\n        return {\r\n          id: key,\r\n          move_name: item.move_name || 'N/A',\r\n          x: item.x || 0,\r\n          y: item.y || 0,\r\n          z: item.z || 0,\r\n          rx: item.RX || 0,\r\n          ry: item.RY || 0,\r\n          rz: item.RZ || 0,\r\n          io: item.IO || {}, // 파싱된 IO 데이터 추가\r\n        };\r\n      });\r\n\r\n      setData(formattedData);\r\n      console.log('formattedData: ', formattedData);\r\n    } catch (error) {\r\n      console.error('Failed to load data from server:', error);\r\n    }\r\n  };\r\n\r\n  const handleRobotMovementListButtonClick = () => {\r\n    toggleList();\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      const originalName = contextMenu.item.move_name;\r\n      const copiedItem = { ...contextMenu.item };\r\n      copiedItem.move_name = `${copiedItem.move_name}_copy`;\r\n\r\n      const updatedData = [...data, copiedItem];\r\n\r\n      setData(updatedData);\r\n\r\n      saveCopiedItemToServer(originalName);\r\n    }\r\n\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const saveCopiedItemToServer = async (originalName) => {\r\n    try {\r\n      await copyMove(originalName);\r\n      console.log('Copied item saved successfully');\r\n    } catch (error) {\r\n      console.error('Failed to save copied item to server:', error);\r\n    }\r\n  };\r\n  const handleModify = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      setSelectedItem(contextMenu.item);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const handleSave = async (modifiedItem) => {\r\n    const existingData = data;\r\n\r\n    const updatedData = existingData.map((item) => {\r\n      if (item.move_name === modifiedItem.originalName) {\r\n        return { ...modifiedItem, originalName: undefined };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setData(updatedData);\r\n\r\n    try {\r\n      console.log('수정할 거 : ', modifiedItem.originalName, modifiedItem);\r\n      await updateMove(modifiedItem.originalName, modifiedItem);\r\n      console.log('Position updated successfully');\r\n    } catch (error) {\r\n      console.error('Failed to update position:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      const nameToDelete = contextMenu.item.move_name;\r\n      const filteredData = data.filter(\r\n        (item) => item.move_name !== nameToDelete\r\n      );\r\n      setData(filteredData);\r\n      deleteFromServer(nameToDelete);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const deleteFromServer = async (nameToDelete) => {\r\n    try {\r\n      console.log(nameToDelete);\r\n      const response = await deleteMove(nameToDelete);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to delete session from server:', error);\r\n    }\r\n  };\r\n\r\n  const handleContextMenu = (event, item) => {\r\n    event.preventDefault();\r\n    setContextMenu(\r\n      contextMenu === null\r\n        ? {\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n            item: item,\r\n          }\r\n        : null\r\n    );\r\n  };\r\n\r\n  const handleCloseContextMenu = () => {\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const onDragStart = (e, index) => {\r\n    e.dataTransfer.setData('text/plain', index);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const onDragOver = (e, index) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n\r\n    setDraggedOverIndex(index);\r\n  };\r\n\r\n  const onDrop = (e, dropIndex) => {\r\n    e.preventDefault();\r\n    const dragIndex = e.dataTransfer.getData('text/plain');\r\n    if (dragIndex === undefined) return;\r\n\r\n    const reorderedData = Array.from(data);\r\n    const [movedItem] = reorderedData.splice(dragIndex, 1);\r\n    reorderedData.splice(dropIndex, 0, movedItem);\r\n\r\n    setData(reorderedData);\r\n\r\n    sendReorderedDataToServer(movedItem.move_name, dropIndex);\r\n\r\n    setDraggedOverIndex(null);\r\n  };\r\n\r\n  const sendReorderedDataToServer = async (moveName, newIndex) => {\r\n    try {\r\n      await updateMoveOrder(moveName, newIndex);\r\n      console.log(`Move name ${moveName} reordered to index ${newIndex}`);\r\n    } catch (error) {\r\n      console.error('Failed to update position order on server:', error);\r\n    }\r\n  };\r\n\r\n  const handleIOClick = (io) => {\r\n    setSelectedIOData(io);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <div\r\n        className={`list-container ${showList ? 'show' : ''}`}\r\n        css={listContainerStyles}\r\n      >\r\n        <TableContainer component={Paper}>\r\n          <Table css={tableStyles} aria-label=\"robot movement table\">\r\n            <TableHead>\r\n              <TableRow css={tableHeaderStyles}>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>X</TableCell>\r\n                <TableCell>Y</TableCell>\r\n                <TableCell>Z</TableCell>\r\n                <TableCell>RX</TableCell>\r\n                <TableCell>RY</TableCell>\r\n                <TableCell>RZ</TableCell>\r\n                <TableCell>IO</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((item, index) => (\r\n                <TableRow\r\n                  key={`${item.id}-${index}`}\r\n                  draggable\r\n                  onDragStart={(e) => onDragStart(e, index)}\r\n                  onDragOver={(e) => onDragOver(e, index)}\r\n                  onDrop={(e) => onDrop(e, index)}\r\n                  onContextMenu={(event) => handleContextMenu(event, item)}\r\n                  css={[\r\n                    defaultStyle,\r\n                    draggedOverIndex === index && hoveredStyle,\r\n                  ]}\r\n                >\r\n                  <TableCell>{item.move_name}</TableCell>\r\n                  <TableCell>{item.x}</TableCell>\r\n                  <TableCell>{item.y}</TableCell>\r\n                  <TableCell>{item.z}</TableCell>\r\n                  <TableCell>{item.rx}</TableCell>\r\n                  <TableCell>{item.ry}</TableCell>\r\n                  <TableCell>{item.rz}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton onClick={() => handleIOClick(item.io)}>\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box sx={{ mt: 2 }}>\r\n          <RunMovementFormDialog />\r\n        </Box>\r\n        <Box sx={{ mt: 2 }}>\r\n          <ModifyFormDialog\r\n            open={Boolean(selectedItem)}\r\n            item={selectedItem}\r\n            onClose={() => setSelectedItem(null)}\r\n            onSave={handleSave}\r\n          />\r\n        </Box>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          css={buttonStyles}\r\n          onClick={handleRobotMovementListButtonClick}\r\n        ></Button>\r\n        <Menu\r\n          keepMounted\r\n          open={contextMenu !== null}\r\n          onClose={handleCloseContextMenu}\r\n          anchorReference=\"anchorPosition\"\r\n          anchorPosition={\r\n            contextMenu !== null\r\n              ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\r\n              : undefined\r\n          }\r\n        >\r\n          <MenuItem onClick={handleCopy}>{t('copy')}</MenuItem>\r\n          <MenuItem onClick={handleModify}>{t('modify')}</MenuItem>\r\n          <MenuItem onClick={handleDelete}>{t('delete')}</MenuItem>\r\n        </Menu>\r\n      </div>\r\n\r\n      <IODialog\r\n        open={dialogOpen}\r\n        onClose={() => setDialogOpen(false)}\r\n        ioData={selectedIOData} // Pass the selected IO data here\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RobotMovementList;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { faker } from '@faker-js/faker';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\n\r\nimport { shutDown, saveMove, saveIpAddress } from '../../../apis/apis';\r\n\r\nimport AppTasks from '../app-tasks';\r\nimport RobotOperationList from '../robot-operation-list';\r\nimport AppOrderTimeline from '../app-order-timeline';\r\nimport AppWidgetSummary from '../app-widget-summary';\r\nimport RobotMovementList from '../robot-movement-list';\r\nimport IODialog from '../io_dialog';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport '../../../i18n.js';\r\n\r\nimport { imageState, brandState } from '../../../recoilState';\r\n\r\n// ----------------------------------------------------------------------\r\nconst imgGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst menuListStyles = css`\r\n  position: absolute;\r\n  z-index: 10;\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 260px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    margin-top: 210px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  transition: background-color 0.3s;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst saveButtonStyles = css`\r\n  align-self: center;\r\n  height: 100%;\r\n  background-color: white;\r\n  color: #919eab;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst inputGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst textFieldStyles = css`\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  padding: 24px;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  label {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst formDialogStyles = css`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 5%;\r\n  z-index: 1000;\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 0;\r\n    width: 100%;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport default function AppView() {\r\n  const [ipAddress, setIpAddress] = useState('');\r\n  const [showList, setShowList] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const currentImage = useRecoilValue(imageState);\r\n  const currentBrand = useRecoilValue(brandState);\r\n\r\n  const handleInputChange = (event) => {\r\n    setIpAddress(event.target.value);\r\n  };\r\n\r\n  const handleSaveIpAddress = async () => {\r\n    try {\r\n      const response = await saveIpAddress(ipAddress, currentBrand);\r\n      console.log(`${response}: ${ipAddress}, ${currentBrand}`);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const handleIOButtonClick = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const savePositionClicked = async () => {\r\n    try {\r\n      const response = await saveMove();\r\n      console.log('Data saved to server:', response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const shutDownClicked = async () => {\r\n    try {\r\n      const response = await shutDown();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Failed to load data. : ', error);\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    setShowList(!showList);\r\n  };\r\n\r\n  // 번역 함수\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"sm\"\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n        {t('greeting')}\r\n      </Typography>\r\n\r\n      <Grid xs={12} md={6} lg={8} css={imgGridStyles}>\r\n        <img src={currentImage} alt=\"robot arm\" />\r\n        <Grid xs={12} md={6} lg={8} css={menuListStyles}>\r\n          <RobotOperationList />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ display: 'flex', justifyContent: 'center' }}\r\n      >\r\n        <Grid css={inputGridStyles} xs={8} sm={9} md={8}>\r\n          <TextField\r\n            css={textFieldStyles}\r\n            label={t('ip address')}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={ipAddress}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_users.png`}\r\n                  style={{ marginRight: '8px' }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid css={inputGridStyles} xs={4} sm={3} md={4}>\r\n          <Button\r\n            css={saveButtonStyles}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSaveIpAddress}\r\n            fullWidth\r\n          >\r\n            {t('save ip')}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase style={{ width: '100%' }} onClick={savePositionClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: '100%' }}\r\n              title={t('save position')}\r\n              total={2}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_buy.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase\r\n            style={{ width: '100%' }}\r\n            onClick={() => handleIOButtonClick()}\r\n          >\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: '100%' }}\r\n              title=\"IO\"\r\n              total={3}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_message.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <IODialog\r\n          open={dialogOpen}\r\n          onClose={() => setDialogOpen(false)}\r\n          ioData={null}\r\n        />\r\n\r\n        <Grid xs={14} sm={8} md={12}>\r\n          <ButtonBase style={{ width: '100%' }} onClick={shutDownClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: '100%' }}\r\n              title={t('shut down')}\r\n              total={6}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_users.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={10} md={4} lg={6}>\r\n          <AppTasks\r\n            title={t('task')}\r\n            list={[\r\n              { id: '1', name: t('listValue.name01') },\r\n              { id: '2', name: t('listValue.name02') },\r\n              { id: '3', name: t('listValue.name03') },\r\n              { id: '4', name: t('listValue.name04') },\r\n              { id: '5', name: t('listValue.name05') },\r\n            ]}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={13} md={7} lg={6}>\r\n          <AppOrderTimeline\r\n            title=\"Process\"\r\n            list={[...Array(3)].map((_, index) => ({\r\n              id: faker.string.uuid(),\r\n              title: [\r\n                t('titleValue.01'),\r\n                t('titleValue.02'),\r\n                t('titleValue.03'),\r\n              ][index],\r\n              type: `order${index + 1}`,\r\n              text: [\r\n                [t('requiredTime.01')],\r\n                [t('requiredTime.02')],\r\n                [t('requiredTime.03')],\r\n              ][index],\r\n            }))}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid css={formDialogStyles} xs={14} sm={8} md={6}>\r\n          <RobotMovementList showList={showList} toggleList={toggleList} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { AppView } from '../sections/overview/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Pionoid | Web I/F </title>\r\n      </Helmet>\r\n\r\n      <AppView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["httpClient","constructor","baseUrl","this","instance","axios","create","baseURL","withCredentials","getToken","localStorage","getItem","request","endpoint","method","params","arguments","length","undefined","query","data","apiUrl","concat","headers","Authorization","FormData","url","error","response","console","status","Error","process","robotAPI","BASE_URL","saveIpAddress","async","ipAddress","robotType","ip","robot_type","res","token","setItem","saveMove","shutDown","robotLogin","robotLogout","robotPowerOn","robotPowerOff","robotEnable","robotDisable","voiceCommand","formData","AnalyticsTasks","_ref","title","subheader","list","other","selected","setSelected","useState","_jsxs","Card","children","_jsx","CardHeader","map","task","TaskItem","checked","includes","id","onChange","taskId","tasksCompleted","filter","value","handleClickComplete","_ref2","open","setOpen","handleCloseMenu","_Fragment","Stack","direction","alignItems","sx","pl","pr","py","borderBottom","theme","palette","divider","color","textDecoration","FormControlLabel","control","Checkbox","label","name","flexGrow","m","IconButton","onClick","event","currentTarget","Iconify","icon","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMarkComplete","info","mr","handleEdit","handleShare","handleDelete","menuListStyles","css","_templateObject","_taggedTemplateLiteral","menuItemStyles","_templateObject2","RobotOperationList","React","anchorRef","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","focus","robotLoginClicked","log","robotLogoutClicked","robotPowerOnClicked","robotPowerOffClicked","robotEnableClicked","robotDisableClicked","t","useTranslation","spacing","style","display","justifyContent","Button","backgroundColor","width","height","fontSize","boxShadow","borderRadius","marginTop","ref","handleToggle","MicNoneOutlinedIcon","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","ondataavailable","push","start","setTimeout","stop","onstop","audioBlob","Blob","type","append","padding","Popper","role","placement","transition","disablePortal","offsetWidth","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","AnalyticsOrderTimeline","Timeline","p","timelineItemClasses","root","flex","item","index","OrderItem","lastTimeline","text","timeText","join","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Typography","variant","AppWidgetSummary","total","component","px","Box","fShortenNumber","divStyles","buttonStyles","RunMovementFormDialog","inputValue","setInputValue","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","reason","handleClickOpen","Dialog","disableScrollLock","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","required","margin","fullWidth","DialogActions","times","runAllMoves","Snackbar","autoHideDuration","Alert","severity","statusStyle","isActive","buttonContainerStyle","buttonStyle","_templateObject3","dialogContentStyle","_templateObject4","tabContainerContainerStyle","_templateObject5","tabContainerStyle","_templateObject6","tabStyle","_templateObject7","ioData","activeButtons","setActiveButtons","Cabinet","DO","DI","AO","AI","Tool","Extend","extio","out","in","currentTab","setCurrentTab","openSections","setOpenSections","buttons","Array","from","_","i","tabNames","useEffect","convertIoData","inputString","formattedString","replace","JSON","parse","convertStringToObject","updateButtonStates","fetchIOStatus","getIOStatus","updatedButtons","CABINET","dout","slice","val","din","aout","ain","TOOL","tio_dout","tio_din","tio_ain","EXTEND","handleButtonClick","button","tabName","buttonIndex","io_type","io_signal_type","setIO","toggleSection","prev","renderButtons","types","Grid","xs","ExpandMoreIcon","transform","Collapse","timeout","unmountOnExit","container","renderStatus","maxWidth","Tabs","handleTabChange","newValue","centered","Tab","onSave","setFormData","handleChange","e","move_name","x","y","z","rx","ry","rz","handleSave","updatedItem","originalName","listContainerStyles","tableHeaderStyles","tableStyles","hoveredStyle","defaultStyle","showList","toggleList","setData","selectedItem","setSelectedItem","contextMenu","setContextMenu","draggedOverIndex","setDraggedOverIndex","dialogOpen","setDialogOpen","selectedIOData","setSelectedIOData","loadDataFromServer","scrollbarWidth","window","innerWidth","document","documentElement","clientWidth","body","overflow","paddingRight","querySelector","getRobotMoves","formattedData","Object","keys","RX","RY","RZ","io","IO","saveCopiedItemToServer","copyMove","deleteFromServer","nameToDelete","deleteMove","sendReorderedDataToServer","moveName","newIndex","new_index","updateMoveOrder","className","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","draggable","onDragStart","dataTransfer","effectAllowed","onDragOver","dropEffect","onDrop","dropIndex","dragIndex","getData","reorderedData","movedItem","splice","onContextMenu","handleContextMenu","mouseX","clientX","mouseY","clientY","handleIOClick","SettingsIcon","mt","ModifyFormDialog","Boolean","updatedData","modifiedItem","updateMove","handleRobotMovementListButtonClick","Menu","keepMounted","handleCloseContextMenu","anchorReference","anchorPosition","top","left","handleCopy","copiedItem","handleModify","filteredData","IODialog","imgGridStyles","saveButtonStyles","inputGridStyles","textFieldStyles","formDialogStyles","AppView","setIpAddress","setShowList","currentImage","useRecoilValue","imageState","currentBrand","brandState","Container","flexDirection","mb","md","lg","src","alt","sm","InputProps","startAdornment","marginRight","ButtonBase","AppTasks","AppOrderTimeline","faker","string","uuid","RobotMovementList","AppPage","Helmet","fCurrency","number","result","numeral","format"],"sourceRoot":""}