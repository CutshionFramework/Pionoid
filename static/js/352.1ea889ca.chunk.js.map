{"version":3,"file":"static/js/352.1ea889ca.chunk.js","mappings":"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","sources":["apis/axiosInstance.js","apis/apis.js","sections/overview/app-tasks.jsx","sections/overview/robot-operation-list.jsx","sections/overview/app-order-timeline.jsx","sections/overview/app-widget-summary.jsx","sections/overview/run-movement-form-dialog.jsx","sections/overview/modify-form-dialog.jsx","sections/overview/robot-movement-list.jsx","sections/overview/digital_io_dialog.jsx","sections/overview/view/app-view.jsx","pages/app.jsx","utils/format-number.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass AxiosInstance {\r\n  constructor(baseUrl) {\r\n    this.baseUrl = baseUrl;\r\n    this.instance = axios.create({\r\n      baseURL: this.baseUrl,\r\n      headers: {\r\n        'Content-Type': 'text/plain',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  async request(endpoint, method, params = '', query = null, data = null) {\r\n    const apiUrl = params\r\n      ? `${endpoint}/${params}${query ? `?${query}` : ''}`\r\n      : endpoint;\r\n    const headers = { 'Content-Type': 'text/plain' };\r\n\r\n    try {\r\n      const response = await this.instance.request({\r\n        url: apiUrl,\r\n        method,\r\n        headers,\r\n        data,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(`HTTP error! status: ${error.response.status}`);\r\n        throw new Error(`HTTP error! status: ${error.response.status}`);\r\n      } else {\r\n        console.error('Network error');\r\n        throw new Error('Network error');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// BASE URL\r\nconst httpClient = new AxiosInstance(process.env.REACT_APP_API_URL);\r\n\r\nexport const robotAPI = {\r\n  get: (endpoint, params = '', query = null) =>\r\n    httpClient.request(endpoint, 'GET', params, query),\r\n\r\n  post: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'POST', params, null, data),\r\n\r\n  put: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PUT', params, null, data),\r\n\r\n  delete: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'DELETE', params, null, data),\r\n\r\n  patch: (endpoint, params = '', data = null) =>\r\n    httpClient.request(endpoint, 'PATCH', params, null, data),\r\n};\r\n","import { robotAPI } from './axiosInstance';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const saveIpAddress = async (ipAddress) => {\r\n  try {\r\n    // endpoint example : const endpoint = `${BASE_URL}/users`;\r\n    //                  : const endpoint = `${BASE_URL}/posts`;\r\n    const endpoint = `${BASE_URL}`; // can be omitted now that just using base url.\r\n\r\n    // params example : const params = `${userid}/profile`;\r\n    //                : const params = `${postid}/text`;\r\n    const params = `set_ip`;\r\n\r\n    // body(=Data you want to send) example : Function Parameter\r\n    const res = await robotAPI.post(endpoint, params, ipAddress);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving IP address:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const savePosition = async () => {\r\n  try {\r\n    const params = `/save_robot_status`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error saving position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updatePosition = async (originalName, updatedItem) => {\r\n  try {\r\n    const params = `/update_robot_status/${encodeURIComponent(originalName)}`;\r\n    const res = await robotAPI.put(params, updatedItem);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error updating position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deletePosition = async (name) => {\r\n  try {\r\n    const params = `/delete_robot_status/${encodeURIComponent(name)}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error deleting position:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotRunSaveMovements = async (times) => {\r\n  try {\r\n    const params = `/run_saved_movements/${times}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error running saved movements:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const shutDown = async () => {\r\n  try {\r\n    const params = `/shut_down`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error shutting down:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogin = async () => {\r\n  try {\r\n    const params = `/login_in`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging in:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotLogout = async () => {\r\n  try {\r\n    const params = `/login_out`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error logging out:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOn = async () => {\r\n  try {\r\n    const params = `/power_on`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering on:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotPowerOff = async () => {\r\n  try {\r\n    const params = `/power_off`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error powering off:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotEnable = async () => {\r\n  try {\r\n    const params = `/enable_robot`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error enabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const robotDisable = async () => {\r\n  try {\r\n    const params = `/disable_robot`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error disabling robot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDigitalOutputStatus = async () => {\r\n  try {\r\n    const params = `/digital_output_status`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error getting digital output status:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const setDigitalOutput = async (index) => {\r\n  try {\r\n    const params = `/use_digital_output/${index}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error using digital output:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const setDigitalInput = async (index) => {\r\n  try {\r\n    const params = `/use_digital_input/${index}`;\r\n    const res = await robotAPI.get(params);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error using digital input:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Popover from '@mui/material/Popover';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport Iconify from '../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsTasks({ title, subheader, list, ...other }) {\r\n  const [selected, setSelected] = useState(['2']);\r\n\r\n  const handleClickComplete = (taskId) => {\r\n    const tasksCompleted = selected.includes(taskId)\r\n      ? selected.filter((value) => value !== taskId)\r\n      : [...selected, taskId];\r\n\r\n    setSelected(tasksCompleted);\r\n  };\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      {list.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          checked={selected.includes(task.id)}\r\n          onChange={() => handleClickComplete(task.id)}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsTasks.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction TaskItem({ task, checked, onChange }) {\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleMarkComplete = () => {\r\n    handleCloseMenu();\r\n    console.info('MARK COMPLETE', task.id);\r\n  };\r\n\r\n  const handleShare = () => {\r\n    handleCloseMenu();\r\n    console.info('SHARE', task.id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleCloseMenu();\r\n    console.info('EDIT', task.id);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleCloseMenu();\r\n    console.info('DELETE', task.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          pl: 2,\r\n          pr: 1,\r\n          py: 1,\r\n          '&:not(:last-of-type)': {\r\n            borderBottom: (theme) => `dashed 1px ${theme.palette.divider}`,\r\n          },\r\n          ...(checked && {\r\n            color: 'text.disabled',\r\n            textDecoration: 'line-through',\r\n          }),\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          control={<Checkbox checked={checked} onChange={onChange} />}\r\n          label={task.name}\r\n          sx={{ flexGrow: 1, m: 0 }}\r\n        />\r\n\r\n        <IconButton color={open ? 'inherit' : 'default'} onClick={handleOpenMenu}>\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem onClick={handleMarkComplete}>\r\n          <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ mr: 2 }} />\r\n          Mark Complete\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleEdit}>\r\n          <Iconify icon=\"solar:pen-bold\" sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleShare}>\r\n          <Iconify icon=\"solar:share-bold\" sx={{ mr: 2 }} />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  task: PropTypes.object,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"../../i18n.js\";\r\nimport MicNoneOutlinedIcon from \"@mui/icons-material/MicNoneOutlined\";\r\n\r\nimport {\r\n  Grow,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popper,\r\n  MenuItem,\r\n  MenuList,\r\n  ClickAwayListener,\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  robotLogin,\r\n  robotLogout,\r\n  robotEnable,\r\n  robotDisable,\r\n  robotPowerOn,\r\n  robotPowerOff,\r\n} from \"../../apis/apis\";\r\n\r\nconst menuListStyles = css`\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst menuItemStyles = css`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: rgb(135, 140, 146);\r\n`;\r\n\r\nexport default function RobotOperationList() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (\r\n      anchorRef.current &&\r\n      anchorRef.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === \"Escape\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const robotLoginClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogin();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotLogoutClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotLogout();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOnClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOn();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotPowerOffClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotPowerOff();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotEnableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotEnable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const robotDisableClicked = async () => {\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotDisable();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"rgb(178,204,255)\",\r\n              width: \"200px\",\r\n              height: \"57px\",\r\n              fontSize: \"20px\",\r\n              boxShadow: \"0 0 10px rgba(131, 169, 190, 0.6)\",\r\n              borderRadius: \"20px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n            ref={anchorRef}\r\n            id=\"composition-button\"\r\n            aria-controls={open ? \"composition-menu\" : undefined}\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}>\r\n            {t(\"operation menu\")}\r\n          </Button>\r\n          <Button>\r\n            <MicNoneOutlinedIcon\r\n              style={{\r\n                height: \"57px\",\r\n                width: \"57px\",\r\n                padding: \"0 15 0 15\",\r\n                color: \"gray\",\r\n                backgroundColor: \"white\",\r\n                boxShadow: \"0 0 10px rgba(131, 169, 190, 0.6)\",\r\n                borderRadius: \"20px\",\r\n              }}\r\n            />\r\n          </Button>\r\n        </div>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          disablePortal={false}\r\n          style={{\r\n            width: anchorRef.current\r\n              ? anchorRef.current.offsetWidth\r\n              : undefined,\r\n          }}>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom-start\"\r\n                    ? \"left top\"\r\n                    : \"left bottom\",\r\n              }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    css={menuListStyles}\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotLoginClicked}>\r\n                      {t(\"login\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotLogoutClicked}>\r\n                      {t(\"logout\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOnClicked}>\r\n                      {t(\"power on\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotPowerOffClicked}>\r\n                      {t(\"power off\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotEnableClicked}>\r\n                      {t(\"enable\")}\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      css={menuItemStyles}\r\n                      onClick={robotDisableClicked}>\r\n                      {t(\"disable\")}\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineItem, { timelineItemClasses } from '@mui/lab/TimelineItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsOrderTimeline({ title, subheader, list, ...other }) {\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n\r\n      <Timeline\r\n        sx={{\r\n          m: 0,\r\n          p: 3,\r\n          [`& .${timelineItemClasses.root}:before`]: {\r\n            flex: 0,\r\n            padding: 0,\r\n          },\r\n        }}\r\n      >\r\n        {list.map((item, index) => (\r\n          <OrderItem key={item.id} item={item} lastTimeline={index === list.length - 1} />\r\n        ))}\r\n      </Timeline>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAnalyticsOrderTimeline.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction OrderItem({ item, lastTimeline }) {\r\n  const { type, title, text } = item;\r\n\r\n  const timeText = text.join('-');\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot\r\n          color={\r\n            (type === 'order1' && 'primary') ||\r\n            (type === 'order2' && 'success') ||\r\n            (type === 'order3' && 'info') ||\r\n            (type === 'order4' && 'warning') ||\r\n            'error'\r\n          }\r\n        />\r\n        {lastTimeline ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n\r\n      <TimelineContent>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n\r\n        <Typography variant=\"caption\" sx={{ color: 'text.disabled' }}>\r\n          {timeText}\r\n        </Typography>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n}\r\n\r\nOrderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  lastTimeline: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { fShortenNumber } from '../../utils/format-number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidgetSummary({ title, total, icon, color = 'primary', sx, ...other }) {\r\n  return (\r\n    <Card\r\n      component={Stack}\r\n      spacing={3}\r\n      direction=\"row\"\r\n      sx={{\r\n        px: 1,\r\n        py: 3,\r\n        borderRadius: 2,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {icon && <Box sx={{ width: 64, height: 64 }}>{icon}</Box>}\r\n\r\n      <Stack spacing={0.5}>\r\n        <Typography variant=\"h4\">{fShortenNumber(total)}</Typography>\r\n\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n          {title}\r\n        </Typography>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppWidgetSummary.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport * as React from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport \"../../i18n.js\";\r\n\r\nimport {\r\n  Alert,\r\n  Stack,\r\n  Button,\r\n  Dialog,\r\n  Snackbar,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from \"@mui/material\";\r\n\r\nimport { robotRunSaveMovements } from \"../../apis/apis\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst divStyles = css`\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  background-color: white;\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: #919eab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport default function RunMovementFormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!inputValue || inputValue <= 0) {\r\n      setSnackbarMessage(\"Please enter a valid positive number.\");\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    try {\r\n      const response = await robotRunSaveMovements(inputValue);\r\n      console.log(`${response}: ${inputValue} times move`);\r\n      setInputValue(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Stack css={divStyles}>\r\n      <Button\r\n        css={buttonStyles}\r\n        variant=\"outlined\"\r\n        onClick={handleClickOpen}>\r\n        {t(\"run movements\")}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        disableScrollLock={true}>\r\n        <DialogTitle>Enter How Many times</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {t(\"description about repetitions\")}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            label={t(\"number of repetitions\")}\r\n            type=\"number\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{t(\"cancel\")}</Button>\r\n          <Button onClick={handleConfirm}>{t(\"start\")}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleSnackbarClose}>\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity=\"error\"\r\n          sx={{ width: \"100%\" }}>\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n}\r\n","// FormDialog.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\n\r\nconst ModifyFormDialog = ({ open, onClose, onSave, item }) => {\r\n  const [formData, setFormData] = useState(item || {});\r\n\r\n  useEffect(() => {\r\n    setFormData(item || {});\r\n  }, [item]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const updatedItem = {\r\n      ...formData,\r\n      originalName: item.name, // 기존 이름을 원본 이름으로 저장\r\n    };\r\n    onSave(updatedItem); // 수정된 아이템을 부모 컴포넌트에 전달\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableScrollLock={true}>\r\n      <DialogTitle>Edit Item</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formData.name || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"x\"\r\n          label=\"X\"\r\n          value={formData.x || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"y\"\r\n          label=\"Y\"\r\n          value={formData.y || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"z\"\r\n          label=\"Z\"\r\n          value={formData.z || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rx\"\r\n          label=\"RX\"\r\n          value={formData.rx || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"ry\"\r\n          label=\"RY\"\r\n          value={formData.ry || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          name=\"rz\"\r\n          label=\"RZ\"\r\n          value={formData.rz || ''}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModifyFormDialog;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Box,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport RunMovementFormDialog from \"./run-movement-form-dialog\";\r\nimport ModifyFormDialog from \"./modify-form-dialog\";\r\nimport { deletePosition, updatePosition } from \"../../apis/apis\";\r\nimport \"../../i18n\";\r\n\r\nconst listContainerStyles = css`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  box-shadow: 2px 2px 10px 2px rgba(0, 0, 0, 0.04);\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  color: #919eab;\r\n  max-height: 50%;\r\n  overflow-y: auto;\r\n  transform: translateX(-50%);\r\n  transition:\r\n    transform 0.5s ease-in-out,\r\n    opacity 0.5s ease-in-out;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n\r\n  &.show {\r\n    transform: translateX(-50%) translateY(0%);\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 900px;\r\n    left: 57.5%;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 800px;\r\n    left: 51%;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 50%;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  width: 200px;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: white;\r\n  background-color: rgb(160, 186, 237);\r\n  box-shadow: 2px 2px 10px 3px rgba(0, 0, 0, 0.03);\r\n  transition: background-color 0.3s ease;\r\n  animation: bounce 2s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    color: black;\r\n    border: none;\r\n  }\r\n\r\n  @keyframes bounce {\r\n    0%,\r\n    20%,\r\n    50%,\r\n    80%,\r\n    100% {\r\n      transform: translateY(0);\r\n    }\r\n    40% {\r\n      transform: translateY(-40px);\r\n    }\r\n    60% {\r\n      transform: translateY(-15px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst tableHeaderStyles = css`\r\n  background-color: #f0f0f0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst tableStyles = css`\r\n  min-width: 650px;\r\n`;\r\n\r\nconst hoveredStyle = css`\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst defaultStyle = css`\r\n  background-color: transparent;\r\n  cursor: grab;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst RobotMovementList = ({ showList, toggleList, onItemClick }) => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [contextMenu, setContextMenu] = useState(null);\r\n\r\n  const [draggedOverIndex, setDraggedOverIndex] = useState(null); // 드래그 중인 요소가 현재 위치한 인덱스\r\n\r\n  const loadDataFromLocalStorage = () => {\r\n    const storedData = localStorage.getItem(\"positions\");\r\n    if (storedData) {\r\n      setData(JSON.parse(storedData));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showList) {\r\n      loadDataFromLocalStorage();\r\n    }\r\n  }, [showList]);\r\n\r\n  useEffect(() => {\r\n    if (contextMenu) {\r\n      const scrollbarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.style.paddingRight = `${scrollbarWidth}px`;\r\n      document.querySelector(\"header\").style.paddingRight =\r\n        `${scrollbarWidth}px`;\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.style.paddingRight = \"\";\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.style.paddingRight = \"\";\r\n    };\r\n  }, [contextMenu]);\r\n\r\n  const handleItemClick = (item) => {\r\n    onItemClick(item);\r\n  };\r\n\r\n  const handleRobotMovementListButtonClick = () => {\r\n    loadDataFromLocalStorage();\r\n    toggleList();\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      const copiedItem = { ...contextMenu.item };\r\n      copiedItem.name = `${copiedItem.name}_copy`;\r\n\r\n      const updatedData = [...data, copiedItem];\r\n      setData(updatedData);\r\n      localStorage.setItem(\"positions\", JSON.stringify(updatedData));\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const handleModify = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      setSelectedItem(contextMenu.item);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const handleSave = async (modifiedItem) => {\r\n    const existingData =\r\n      JSON.parse(localStorage.getItem(\"positions\")) || [];\r\n\r\n    const updatedData = existingData.map((item) => {\r\n      if (item.name === modifiedItem.originalName) {\r\n        return { ...modifiedItem, originalName: undefined };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    localStorage.setItem(\"positions\", JSON.stringify(updatedData));\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await updatePosition(modifiedItem.originalName, modifiedItem);\r\n      console.log(\"Position updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to update position:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (contextMenu && contextMenu.item) {\r\n      deleteFromLocalStorage(contextMenu.item.name);\r\n      deleteFromServer(contextMenu.item.name);\r\n    }\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const deleteFromLocalStorage = (nameToDelete) => {\r\n    const existingData =\r\n      JSON.parse(localStorage.getItem(\"positions\")) || [];\r\n    const filteredData = existingData.filter(\r\n      (item) => item.name !== nameToDelete\r\n    );\r\n    localStorage.setItem(\"positions\", JSON.stringify(filteredData));\r\n    setData(filteredData);\r\n  };\r\n\r\n  const deleteFromServer = async (nameToDelete) => {\r\n    try {\r\n      console.log(nameToDelete);\r\n      const response = await deletePosition(nameToDelete);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete session from server:\", error);\r\n    }\r\n  };\r\n\r\n  const handleContextMenu = (event, item) => {\r\n    event.preventDefault();\r\n    setContextMenu(\r\n      contextMenu === null\r\n        ? {\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n            item: item,\r\n          }\r\n        : null\r\n    );\r\n  };\r\n\r\n  const handleCloseContextMenu = () => {\r\n    setContextMenu(null);\r\n  };\r\n\r\n  const onDragStart = (e, index) => {\r\n    e.dataTransfer.setData(\"text/plain\", index);\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  const onDragOver = (e, index) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = \"move\";\r\n\r\n    setDraggedOverIndex(index);\r\n  };\r\n\r\n  const onDrop = (e, dropIndex) => {\r\n    e.preventDefault();\r\n    const dragIndex = e.dataTransfer.getData(\"text/plain\");\r\n    if (dragIndex === undefined) return;\r\n\r\n    const reorderedData = Array.from(data);\r\n    const [movedItem] = reorderedData.splice(dragIndex, 1);\r\n    reorderedData.splice(dropIndex, 0, movedItem);\r\n\r\n    setData(reorderedData);\r\n    localStorage.setItem(\"positions\", JSON.stringify(reorderedData));\r\n\r\n    setDraggedOverIndex(null);\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <div\r\n        className={`list-container ${showList ? \"show\" : \"\"}`}\r\n        css={listContainerStyles}>\r\n        <TableContainer component={Paper}>\r\n          <Table css={tableStyles} aria-label=\"robot movement table\">\r\n            <TableHead>\r\n              <TableRow css={tableHeaderStyles}>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>X</TableCell>\r\n                <TableCell>Y</TableCell>\r\n                <TableCell>Z</TableCell>\r\n                <TableCell>RX</TableCell>\r\n                <TableCell>RY</TableCell>\r\n                <TableCell>RZ</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((item, index) => (\r\n                <TableRow\r\n                  key={item.name}\r\n                  draggable\r\n                  onDragStart={(e) => onDragStart(e, index)}\r\n                  onDragOver={(e) => onDragOver(e, index)}\r\n                  onDrop={(e) => onDrop(e, index)}\r\n                  onClick={() => handleItemClick(item.name)}\r\n                  onContextMenu={(event) =>\r\n                    handleContextMenu(event, item)\r\n                  }\r\n                  css={[\r\n                    defaultStyle,\r\n                    draggedOverIndex === index && hoveredStyle,\r\n                  ]}>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>{item.x}</TableCell>\r\n                  <TableCell>{item.y}</TableCell>\r\n                  <TableCell>{item.z}</TableCell>\r\n                  <TableCell>{item.rx}</TableCell>\r\n                  <TableCell>{item.ry}</TableCell>\r\n                  <TableCell>{item.rz}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box sx={{ mt: 2 }}>\r\n          <RunMovementFormDialog />\r\n        </Box>\r\n        <Box sx={{ mt: 2 }}>\r\n          <ModifyFormDialog\r\n            open={Boolean(selectedItem)}\r\n            item={selectedItem}\r\n            onClose={() => setSelectedItem(null)}\r\n            onSave={handleSave}\r\n          />\r\n        </Box>\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          css={buttonStyles}\r\n          onClick={handleRobotMovementListButtonClick}></Button>\r\n        <Menu\r\n          keepMounted\r\n          open={contextMenu !== null}\r\n          onClose={handleCloseContextMenu}\r\n          anchorReference=\"anchorPosition\"\r\n          anchorPosition={\r\n            contextMenu !== null\r\n              ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\r\n              : undefined\r\n          }>\r\n          <MenuItem onClick={handleCopy}>{t(\"copy\")}</MenuItem>\r\n          <MenuItem onClick={handleModify}>{t(\"modify\")}</MenuItem>\r\n          <MenuItem onClick={handleDelete}>{t(\"delete\")}</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RobotMovementList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  Button,\r\n} from '@mui/material';\r\n\r\nimport { setDigitalInput, setDigitalOutput } from '../../apis/apis';\r\n\r\nfunction DigitalIODialog({ open, onClose, dialogType }) {\r\n  const [activeDIO, setActiveDIO] = useState([]);\r\n  const buttons = Array.from({ length: 16 }, (_, i) => i + 1);\r\n  const isDO = dialogType === 'DO';\r\n  const title = isDO ? 'Digital Outputs' : 'Digital Inputs';\r\n\r\n  const storageKey = isDO ? 'DO_ACTIVE' : 'DI_ACTIVE';\r\n\r\n  useEffect(() => {\r\n    const storedDIO = JSON.parse(localStorage.getItem(storageKey)) || [];\r\n    setActiveDIO(storedDIO);\r\n  }, [storageKey]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(storageKey, JSON.stringify(activeDIO));\r\n  }, [activeDIO, storageKey]);\r\n\r\n  const handleButtonClick = (button) => {\r\n    setActiveDIO((prevActiveDIO) => {\r\n      const updatedDIO = prevActiveDIO.includes(button)\r\n        ? prevActiveDIO.filter((b) => b !== button)\r\n        : [...prevActiveDIO, button];\r\n\r\n      // 상태가 변경된 후 API 호출\r\n      if (isDO) {\r\n        DOButtonClicked(button);\r\n      } else {\r\n        DIButtonClicked(button);\r\n      }\r\n\r\n      return updatedDIO;\r\n    });\r\n  };\r\n\r\n  const DOButtonClicked = async (button) => {\r\n    try {\r\n      await setDigitalOutput(button);\r\n    } catch (error) {\r\n      console.error('Failed to set digital output. : ', error);\r\n    }\r\n  };\r\n\r\n  const DIButtonClicked = async (button) => {\r\n    try {\r\n      await setDigitalInput(button);\r\n    } catch (error) {\r\n      console.error('Failed to set digital input. : ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          {buttons.map((button) => (\r\n            <Grid item xs={12} sm={6} md={4} key={button}>\r\n              <Button\r\n                variant={activeDIO.includes(button) ? 'contained' : 'outlined'}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={() => handleButtonClick(button)}\r\n              >\r\n                {isDO ? `DO ${button}` : `DI ${button}`}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default DigitalIODialog;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\n\r\nimport {\r\n  shutDown,\r\n  savePosition,\r\n  saveIpAddress,\r\n} from \"../../../apis/apis\";\r\n\r\nimport AppTasks from \"../app-tasks\";\r\nimport RobotOperationList from \"../robot-operation-list\";\r\nimport AppOrderTimeline from \"../app-order-timeline\";\r\nimport AppWidgetSummary from \"../app-widget-summary\";\r\nimport RobotMovementList from \"../robot-movement-list\";\r\nimport DigitalIODialog from \"../digital_io_dialog.jsx\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"../../../i18n.js\";\r\n\r\nimport { imageState } from \"../../../recoilState\";\r\n\r\n// ----------------------------------------------------------------------\r\nconst imgGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst menuListStyles = css`\r\n  position: absolute;\r\n  z-index: 10;\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 260px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    margin-top: 210px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst buttonStyles = css`\r\n  transition: background-color 0.3s;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst saveButtonStyles = css`\r\n  align-self: center;\r\n  height: 100%;\r\n  background-color: white;\r\n  color: #919eab;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst inputGridStyles = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst textFieldStyles = css`\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  padding: 24px;\r\n  box-shadow: 2px 2px 20px 3px rgba(0, 0, 0, 0.03);\r\n  transition:\r\n    background-color 0.3s,\r\n    box-shadow 0.3s;\r\n\r\n  label {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst formDialogStyles = css`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 5%;\r\n  z-index: 1000;\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    width: 578px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    left: 0;\r\n    width: 100%;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport default function AppView() {\r\n  const [ipAddress, setIpAddress] = useState(\"\");\r\n  const [showList, setShowList] = useState(false);\r\n  const [dialogType, setDialogType] = useState(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const currentImage = useRecoilValue(imageState);\r\n\r\n  const handleInputChange = (event) => {\r\n    setIpAddress(event.target.value);\r\n  };\r\n\r\n  const handleSaveIpAddress = async () => {\r\n    try {\r\n      const response = await saveIpAddress(ipAddress);\r\n      console.log(`${response}: ${ipAddress}`);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const handleDIOButtonClick = (type) => {\r\n    setDialogType(type);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const savePositionClicked = async () => {\r\n    try {\r\n      const response = await savePosition();\r\n      saveToLocalStorage(\"positions\", response); // 'positions'는 로컬스토리지의 키\r\n      console.log(\"Data saved to localStorage:\", response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const shutDownClicked = async () => {\r\n    try {\r\n      const response = await shutDown();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(\"Failed to load data. : \", error);\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    setShowList(!showList);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    console.log(`${item} clicked`);\r\n  };\r\n\r\n  // 변환할 데이터 포맷\r\n  const formatData = (data) => ({\r\n    name: data.name,\r\n    x: data.x,\r\n    y: data.y,\r\n    z: data.z,\r\n    rx: data.rx,\r\n    ry: data.ry,\r\n    rz: data.rz,\r\n  });\r\n\r\n  // 로컬스토리지에 저장할 함수\r\n  const saveToLocalStorage = (key, data) => {\r\n    const existingData = JSON.parse(localStorage.getItem(key)) || [];\r\n    const formattedData = formatData(data); // 변환 함수 호출\r\n    existingData.push(formattedData);\r\n    localStorage.setItem(key, JSON.stringify(existingData));\r\n  };\r\n\r\n  // 번역 함수\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"sm\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}>\r\n      <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n        {t(\"greeting\")}\r\n      </Typography>\r\n\r\n      <Grid xs={12} md={6} lg={8} css={imgGridStyles}>\r\n        <img src={currentImage} alt=\"robot arm\" />\r\n        <Grid xs={12} md={6} lg={8} css={menuListStyles}>\r\n          <RobotOperationList />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Grid css={inputGridStyles} xs={8} sm={9} md={8}>\r\n          <TextField\r\n            css={textFieldStyles}\r\n            label={t(\"ip address\")}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={ipAddress}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_users.png`}\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid css={inputGridStyles} xs={4} sm={3} md={4}>\r\n          <Button\r\n            css={saveButtonStyles}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSaveIpAddress}\r\n            fullWidth>\r\n            {t(\"save ip\")}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase\r\n            style={{ width: \"100%\" }}\r\n            onClick={savePositionClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"save position\")}\r\n              total={2}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_buy.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => handleDIOButtonClick(\"DO\")}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title=\"DO\"\r\n              total={3}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_message.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => handleDIOButtonClick(\"DI\")}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title=\"DI\"\r\n              total={4}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_message.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <DigitalIODialog\r\n          open={dialogOpen}\r\n          onClose={() => setDialogOpen(false)}\r\n          dialogType={dialogType}\r\n        />\r\n\r\n        <Grid xs={14} sm={8} md={6}>\r\n          <ButtonBase\r\n            style={{ width: \"100%\" }}\r\n            onClick={shutDownClicked}>\r\n            <AppWidgetSummary\r\n              css={buttonStyles}\r\n              style={{ width: \"100%\" }}\r\n              title={t(\"shut down\")}\r\n              total={6}\r\n              color=\"primary\"\r\n              icon={\r\n                <img\r\n                  alt=\"icon\"\r\n                  src={`${process.env.PUBLIC_URL}/assets/icons/glass/ic_glass_users.png`}\r\n                />\r\n              }\r\n            />\r\n          </ButtonBase>\r\n        </Grid>\r\n\r\n        <Grid xs={10} md={4} lg={6}>\r\n          <AppTasks\r\n            title={t(\"task\")}\r\n            list={[\r\n              { id: \"1\", name: t(\"listValue.name01\") },\r\n              { id: \"2\", name: t(\"listValue.name02\") },\r\n              { id: \"3\", name: t(\"listValue.name03\") },\r\n              { id: \"4\", name: t(\"listValue.name04\") },\r\n              { id: \"5\", name: t(\"listValue.name05\") },\r\n            ]}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={13} md={7} lg={6}>\r\n          <AppOrderTimeline\r\n            title=\"Process\"\r\n            list={[...Array(3)].map((_, index) => ({\r\n              id: faker.string.uuid(),\r\n              title: [\r\n                t(\"titleValue.01\"),\r\n                t(\"titleValue.02\"),\r\n                t(\"titleValue.03\"),\r\n              ][index],\r\n              type: `order${index + 1}`,\r\n              text: [\r\n                [t(\"requiredTime.01\")],\r\n                [t(\"requiredTime.02\")],\r\n                [t(\"requiredTime.03\")],\r\n              ][index],\r\n            }))}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid css={formDialogStyles} xs={14} sm={8} md={6}>\r\n          <RobotMovementList\r\n            showList={showList}\r\n            toggleList={toggleList}\r\n            onItemClick={handleItemClick}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { AppView } from '../sections/overview/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Pionoid | Web I/F </title>\r\n      </Helmet>\r\n\r\n      <AppView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["httpClient","constructor","baseUrl","this","instance","axios","create","baseURL","headers","withCredentials","request","endpoint","method","params","arguments","length","undefined","query","data","apiUrl","concat","url","error","response","console","status","Error","process","REACT_APP_API_URL","robotAPI","BASE_URL","saveIpAddress","async","ipAddress","savePosition","shutDown","robotLogin","robotLogout","robotPowerOn","robotPowerOff","robotEnable","robotDisable","AnalyticsTasks","_ref","title","subheader","list","other","selected","setSelected","useState","_jsxs","Card","children","_jsx","CardHeader","map","task","TaskItem","checked","includes","id","onChange","taskId","tasksCompleted","filter","value","handleClickComplete","_ref2","open","setOpen","handleCloseMenu","_Fragment","Stack","direction","alignItems","sx","pl","pr","py","borderBottom","theme","palette","divider","color","textDecoration","FormControlLabel","control","Checkbox","label","name","flexGrow","m","IconButton","onClick","event","currentTarget","Iconify","icon","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMarkComplete","info","mr","handleEdit","handleShare","handleDelete","menuListStyles","css","_templateObject","_taggedTemplateLiteral","menuItemStyles","_templateObject2","RobotOperationList","React","anchorRef","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","focus","robotLoginClicked","log","robotLogoutClicked","robotPowerOnClicked","robotPowerOffClicked","robotEnableClicked","robotDisableClicked","t","useTranslation","spacing","style","display","justifyContent","Button","backgroundColor","width","height","fontSize","boxShadow","borderRadius","marginTop","ref","handleToggle","MicNoneOutlinedIcon","padding","Popper","role","placement","transition","disablePortal","offsetWidth","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","AnalyticsOrderTimeline","Timeline","p","timelineItemClasses","root","flex","item","index","OrderItem","lastTimeline","type","text","timeText","join","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Typography","variant","AppWidgetSummary","total","component","px","Box","fShortenNumber","divStyles","buttonStyles","RunMovementFormDialog","inputValue","setInputValue","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","reason","handleClickOpen","Dialog","disableScrollLock","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","required","margin","fullWidth","DialogActions","times","robotRunSaveMovements","Snackbar","autoHideDuration","Alert","severity","onSave","formData","setFormData","useEffect","handleChange","e","x","y","z","rx","ry","rz","handleSave","updatedItem","originalName","listContainerStyles","tableHeaderStyles","_templateObject3","tableStyles","_templateObject4","hoveredStyle","_templateObject5","defaultStyle","_templateObject6","showList","toggleList","onItemClick","setData","selectedItem","setSelectedItem","contextMenu","setContextMenu","draggedOverIndex","setDraggedOverIndex","loadDataFromLocalStorage","storedData","localStorage","getItem","JSON","parse","scrollbarWidth","window","innerWidth","document","documentElement","clientWidth","body","overflow","paddingRight","querySelector","deleteFromLocalStorage","nameToDelete","filteredData","setItem","stringify","deleteFromServer","encodeURIComponent","deletePosition","className","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","draggable","onDragStart","dataTransfer","effectAllowed","onDragOver","dropEffect","onDrop","dropIndex","dragIndex","getData","reorderedData","Array","from","movedItem","splice","handleItemClick","onContextMenu","handleContextMenu","mouseX","clientX","mouseY","clientY","mt","ModifyFormDialog","Boolean","updatedData","modifiedItem","updatePosition","handleRobotMovementListButtonClick","Menu","keepMounted","handleCloseContextMenu","anchorReference","anchorPosition","top","left","handleCopy","copiedItem","handleModify","dialogType","activeDIO","setActiveDIO","buttons","_","i","isDO","storageKey","storedDIO","DOButtonClicked","setDigitalOutput","button","DIButtonClicked","setDigitalInput","Grid","container","xs","sm","md","prevActiveDIO","updatedDIO","b","handleButtonClick","imgGridStyles","saveButtonStyles","inputGridStyles","textFieldStyles","formDialogStyles","_templateObject7","AppView","setIpAddress","setShowList","setDialogType","dialogOpen","setDialogOpen","currentImage","useRecoilValue","imageState","handleDIOButtonClick","saveToLocalStorage","existingData","formattedData","formatData","push","Container","maxWidth","flexDirection","mb","lg","src","alt","InputProps","startAdornment","marginRight","ButtonBase","DigitalIODialog","AppTasks","AppOrderTimeline","faker","string","uuid","RobotMovementList","AppPage","Helmet","fCurrency","number","result","numeral","format","replace"],"sourceRoot":""}